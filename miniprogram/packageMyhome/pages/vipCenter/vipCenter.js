"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vipService_1 = require("./config/vipService");
const utils_1 = require("./config/utils");
const utils_2 = require("../../../utils/utils");
const api_service_1 = require("../../../service/api.service");
Page({
    data: {
        BJ: vipService_1.BAIJIN,
        HT: vipService_1.HUANGTONG,
        rightList: vipService_1.RIGHTLIST,
        swiper: {
            indicatorDots: true,
            vertical: false,
            autoplay: false,
            interval: 2000,
            duration: 500,
        },
        selectValue: {},
        payBarStatus: {
            isShow: true,
            content: "立即支付",
        },
        userInfo: {},
        currentRight: 0,
        currentPrice: 0,
        upgradeFlag: false,
        tipFlag: false,
        upgradeInfo: {},
    },
    onLoad: function (option) {
        const type = option.type;
        console.log(`vipCenter type:`, type);
        this.adjustVipType(type);
        const user = wx.getStorageSync("userInfo");
        console.log("userInfo", user);
        this.setData({
            userInfo: Object.assign({}, user, { vipExpireAt: utils_2.formatHLSTime(user.vipExpireAt) }),
        });
        api_service_1.getVipInfo().then((res) => {
            const priceList = utils_1.dealWithVipPriceInfo(res.data);
            const vipRightInfo = utils_1.dealWithVipRightList(res.data);
            console.log(priceList);
            this.setData({
                BJ: priceList.BAIJIN,
                HT: priceList.HUANGTONG,
                rightList: vipRightInfo,
            });
            console.log(`=====vipRightInfo=====`, vipRightInfo);
        });
        if (user.vipType && user.vipType !== "platinum") {
            api_service_1.vipListInfo().then((res) => {
                if (res.code === 200) {
                    this.setData({
                        upgradeInfo: res.data.upgradeInfo,
                    });
                }
            });
        }
        this.checkStatus(this.data.currentRight);
    },
    adjustVipType(type) {
        if (type === "1") {
            this.setData({
                currentRight: 0
            });
        }
        else if (type === "2") {
            this.setData({
                currentRight: 1
            });
        }
        else if (type === "3") {
            this.setData({
                currentRight: 1
            });
        }
    },
    getVipInfo() { },
    goRecharge() {
        let payInfo = Object.assign({}, this.data.selectValue, { currentPrice: this.data.currentPrice });
        payInfo = JSON.stringify(payInfo);
        if (this.data.currentPrice === 0) {
            wx.showToast({
                title: "请选择会员充值方式",
                icon: "none",
                duration: 2000,
            });
            return;
        }
        wx.navigateTo({
            url: `../../../packageMyhome/pages/choosePay/choosePay?payInfo=${payInfo}`,
        });
    },
    swiperChange(e) {
        console.log(e.detail.current);
        this.checkStatus(e.detail.current);
    },
    checkStatus(currentRight) {
        const { userInfo } = this.data;
        this.data.HT.priceList.forEach((el) => {
            el.select = false;
        });
        this.data.BJ.priceList.forEach((el) => {
            el.select = false;
        });
        if (userInfo.vipType === "platinum" && currentRight === 0) {
            this.setData({
                payBarStatus: {
                    isShow: false,
                },
                currentPrice: 0,
                tipFlag: true,
                selectValue: {},
                HT: this.data.HT,
                BJ: this.data.BJ,
                upgradeFlag: false,
                currentRight: currentRight,
            });
            return;
        }
        else if ((userInfo.vipType === "platinum" && currentRight === 1) ||
            (userInfo.vipType === "bronze" && currentRight === 0)) {
            this.setData({
                payBarStatus: {
                    isShow: true,
                    content: "立即续费",
                },
                tipFlag: false,
                selectValue: {},
                currentPrice: 0,
                HT: this.data.HT,
                BJ: this.data.BJ,
                upgradeFlag: false,
                currentRight: currentRight,
            });
        }
        else if (userInfo.vipType === "bronze" && currentRight === 1) {
            this.setData({
                payBarStatus: {
                    isShow: true,
                    content: "立即升级",
                },
                currentPrice: this.data.upgradeInfo.totalPrice,
                upgradeFlag: true,
                HT: this.data.HT,
                BJ: this.data.BJ,
                selectValue: {},
                tipFlag: false,
                currentRight: currentRight,
            });
        }
    },
    selectPrice(e) {
        const { selectIndex, currentRight } = e.currentTarget.dataset;
        console.log(e.currentTarget.dataset);
        const { BJ, HT } = this.data;
        let currentPrice = 0;
        let selectValue = {};
        const priceList = currentRight === 0 ? HT.priceList : BJ.priceList;
        priceList.forEach((item, index) => {
            if (index === selectIndex) {
                item.select = true;
            }
            else {
                item.select = false;
            }
        });
        if (currentRight === 0) {
            HT.priceList = priceList;
            currentPrice = HT.priceList[selectIndex].value;
            selectValue = HT.priceList[selectIndex];
        }
        else {
            currentPrice = BJ.priceList[selectIndex].value;
            BJ.priceList = priceList;
            selectValue = BJ.priceList[selectIndex];
        }
        this.setData({
            BJ,
            HT,
            currentPrice,
            selectValue: Object.assign({}, selectValue, { vipType: currentRight === 0 ? "bronze" : "platinum" }),
        });
        console.log(this.data.HT.priceList);
        console.log(this.data.BJ.priceList);
        console.log(`vipCenter selectValue:`, selectValue);
    },
    formatVipExpiredAtDate: function (date) {
        console.log("-----come in -------");
        return utils_2.formatHLSTime(date);
    },
    onReady: function () { },
    onShow: function () { },
    onHide: function () { },
    onUnload: function () { },
    onPullDownRefresh: function () { },
    onReachBottom: function () { },
});
//# sourceMappingURL=data:application/json;base64,
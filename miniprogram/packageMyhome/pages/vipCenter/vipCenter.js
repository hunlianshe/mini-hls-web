"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vipService_1 = require("./config/vipService");
Page({
    data: {
        BJ: vipService_1.BAIJIN,
        HT: vipService_1.HUANGTONG,
        rightList: vipService_1.RIGHTLIST,
        swiper: {
            indicatorDots: true,
            vertical: false,
            autoplay: false,
            interval: 2000,
            duration: 500
        },
        currentRight: 0,
        currentPrice: 0,
    },
    onLoad: function () { },
    goRecharge() {
        wx.navigateTo({
            url: `../../../packageMyhome/pages/recharge/recharge`,
        });
    },
    swiperChange(e) {
        console.log(e.detail.current);
        this.setData({
            currentRight: e.detail.current,
        });
    },
    selectPrice(e) {
        console.log(e.currentTarget.dataset);
        const { BJ, HT } = this.data;
        let currentPrice = 0;
        const { selectIndex, currentRight } = e.currentTarget.dataset;
        const priceList = currentRight === 0 ? HT.priceList : BJ.priceList;
        priceList.forEach((item, index) => {
            if (index === selectIndex) {
                item.select = true;
            }
            else {
                item.select = false;
            }
            ;
        });
        if (currentRight === 0) {
            HT.priceList = priceList;
            currentPrice = HT.priceList[selectIndex].value;
        }
        else {
            currentPrice = BJ.priceList[selectIndex].value;
            BJ.priceList = priceList;
        }
        ;
        this.setData({
            BJ,
            HT,
            currentPrice
        });
        console.log(this.data.HT.priceList);
        console.log(this.data.BJ.priceList);
    },
    onReady: function () { },
    onShow: function () { },
    onHide: function () { },
    onUnload: function () { },
    onPullDownRefresh: function () { },
    onReachBottom: function () { },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlwQ2VudGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmlwQ2VudGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0RBQW1FO0FBRW5FLElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLEVBQUUsRUFBRSxtQkFBTTtRQUNWLEVBQUUsRUFBRSxzQkFBUztRQUNiLFNBQVMsRUFBRSxzQkFBUztRQUNwQixNQUFNLEVBQUU7WUFDTixhQUFhLEVBQUUsSUFBSTtZQUNuQixRQUFRLEVBQUUsS0FBSztZQUNmLFFBQVEsRUFBRSxLQUFLO1lBQ2YsUUFBUSxFQUFFLElBQUk7WUFDZCxRQUFRLEVBQUUsR0FBRztTQUNkO1FBQ0QsWUFBWSxFQUFFLENBQUM7UUFDZixZQUFZLEVBQUUsQ0FBQztLQUNoQjtJQUNELE1BQU0sRUFBRSxjQUFhLENBQUM7SUFHdEIsVUFBVTtRQUNSLEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDWixHQUFHLEVBQUUsZ0RBQWdEO1NBQ3RELENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxZQUFZLENBQUMsQ0FBTTtRQUNqQixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLFlBQVksRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU87U0FDL0IsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFdBQVcsQ0FBQyxDQUFNO1FBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUNwQyxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDNUIsSUFBSSxZQUFZLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLE1BQU0sRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUM7UUFDOUQsTUFBTSxTQUFTLEdBQUcsWUFBWSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQztRQUNuRSxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ2hDLElBQUksS0FBSyxLQUFLLFdBQVcsRUFBRTtnQkFBRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQTthQUFFO2lCQUFNO2dCQUFFLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFBO2FBQUM7WUFBQSxDQUFDO1FBQ2hGLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxZQUFZLEtBQUssQ0FBQyxFQUFFO1lBQ3RCLEVBQUUsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1lBQ3pCLFlBQVksR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssQ0FBQztTQUNoRDthQUFNO1lBQ0wsWUFBWSxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQy9DLEVBQUUsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFBO1NBQ3pCO1FBQUEsQ0FBQztRQUNGLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixFQUFFO1lBQ0YsRUFBRTtZQUNGLFlBQVk7U0FDYixDQUFDLENBQUM7UUFFSCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQ25DLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDckMsQ0FBQztJQUVELE9BQU8sRUFBRSxjQUFhLENBQUM7SUFFdkIsTUFBTSxFQUFFLGNBQWEsQ0FBQztJQUV0QixNQUFNLEVBQUUsY0FBYSxDQUFDO0lBRXRCLFFBQVEsRUFBRSxjQUFhLENBQUM7SUFFeEIsaUJBQWlCLEVBQUUsY0FBYSxDQUFDO0lBRWpDLGFBQWEsRUFBRSxjQUFhLENBQUM7Q0FDOUIsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQkFJSklOLCBIVUFOR1RPTkcsIFJJR0hUTElTVCB9IGZyb20gJy4vY29uZmlnL3ZpcFNlcnZpY2UnO1xuXG5QYWdlKHtcbiAgZGF0YToge1xuICAgIEJKOiBCQUlKSU4sXG4gICAgSFQ6IEhVQU5HVE9ORyxcbiAgICByaWdodExpc3Q6IFJJR0hUTElTVCxcbiAgICBzd2lwZXI6IHtcbiAgICAgIGluZGljYXRvckRvdHM6IHRydWUsXG4gICAgICB2ZXJ0aWNhbDogZmFsc2UsXG4gICAgICBhdXRvcGxheTogZmFsc2UsXG4gICAgICBpbnRlcnZhbDogMjAwMCxcbiAgICAgIGR1cmF0aW9uOiA1MDBcbiAgICB9LFxuICAgIGN1cnJlbnRSaWdodDogMCwgLy8gMC1odWFuZ3RvbmcgMS1iYWlqaW5cbiAgICBjdXJyZW50UHJpY2U6IDAsIC8vIDAtaHVhbmd0b25nIDEtYmFpamluXG4gIH0sXG4gIG9uTG9hZDogZnVuY3Rpb24gKCkge30sXG5cbiAgLyoqIOWFheWAvCAqL1xuICBnb1JlY2hhcmdlKCk6IGFueSB7XG4gICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICB1cmw6IGAuLi8uLi8uLi9wYWNrYWdlTXlob21lL3BhZ2VzL3JlY2hhcmdlL3JlY2hhcmdlYCxcbiAgICB9KVxuICB9LFxuXG4gIHN3aXBlckNoYW5nZShlOiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZyhlLmRldGFpbC5jdXJyZW50KTtcbiAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgIGN1cnJlbnRSaWdodDogZS5kZXRhaWwuY3VycmVudCwgXG4gICAgfSk7XG4gIH0sXG5cbiAgc2VsZWN0UHJpY2UoZTogYW55KSB7XG4gICAgY29uc29sZS5sb2coZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQpXG4gICAgY29uc3QgeyBCSiwgSFR9ID0gdGhpcy5kYXRhO1xuICAgIGxldCBjdXJyZW50UHJpY2UgPSAwO1xuICAgIGNvbnN0IHsgc2VsZWN0SW5kZXgsIGN1cnJlbnRSaWdodCB9ID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQ7XG4gICAgY29uc3QgcHJpY2VMaXN0ID0gY3VycmVudFJpZ2h0ID09PSAwID8gSFQucHJpY2VMaXN0IDogQkoucHJpY2VMaXN0O1xuICAgIHByaWNlTGlzdC5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4geyBcbiAgICAgIGlmIChpbmRleCA9PT0gc2VsZWN0SW5kZXgpIHsgaXRlbS5zZWxlY3QgPSB0cnVlIH0gZWxzZSB7IGl0ZW0uc2VsZWN0ID0gZmFsc2V9O1xuICAgIH0pO1xuICAgIGlmIChjdXJyZW50UmlnaHQgPT09IDApIHtcbiAgICAgIEhULnByaWNlTGlzdCA9IHByaWNlTGlzdDsgXG4gICAgICBjdXJyZW50UHJpY2UgPSBIVC5wcmljZUxpc3Rbc2VsZWN0SW5kZXhdLnZhbHVlO1xuICAgIH0gZWxzZSB7IFxuICAgICAgY3VycmVudFByaWNlID0gQkoucHJpY2VMaXN0W3NlbGVjdEluZGV4XS52YWx1ZTtcbiAgICAgIEJKLnByaWNlTGlzdCA9IHByaWNlTGlzdFxuICAgIH07XG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICBCSixcbiAgICAgIEhULFxuICAgICAgY3VycmVudFByaWNlXG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGEuSFQucHJpY2VMaXN0KVxuICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YS5CSi5wcmljZUxpc3QpXG4gIH0sXG5cbiAgb25SZWFkeTogZnVuY3Rpb24gKCkge30sXG5cbiAgb25TaG93OiBmdW5jdGlvbiAoKSB7fSxcblxuICBvbkhpZGU6IGZ1bmN0aW9uICgpIHt9LFxuXG4gIG9uVW5sb2FkOiBmdW5jdGlvbiAoKSB7fSxcblxuICBvblB1bGxEb3duUmVmcmVzaDogZnVuY3Rpb24gKCkge30sXG5cbiAgb25SZWFjaEJvdHRvbTogZnVuY3Rpb24gKCkge30sXG59KSJdfQ==
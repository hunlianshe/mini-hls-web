"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vipService_1 = require("./config/vipService");
const utils_1 = require("./config/utils");
const api_service_1 = require("../../../service/api.service");
Page({
    data: {
        BJ: vipService_1.BAIJIN,
        HT: vipService_1.HUANGTONG,
        rightList: vipService_1.RIGHTLIST,
        swiper: {
            indicatorDots: true,
            vertical: false,
            autoplay: false,
            interval: 2000,
            duration: 500,
        },
        selectValue: {},
        payBarStatus: {
            isShow: true,
            content: "立即支付",
        },
        userInfo: {},
        currentRight: 0,
        currentPrice: 0,
    },
    onLoad: function () {
        const user = wx.getStorageSync("userInfo");
        console.log("userInfo", user);
        this.setData({
            userInfo: Object.assign({}, user, { vipType: "bronze", vipExpireAt: "2020.12.31" }),
        });
        api_service_1.getVipInfo().then((res) => {
            const priceList = utils_1.dealWithVipPriceInfo(res.data);
            const vipRightInfo = utils_1.dealWithVipRightList(res.data);
            console.log(priceList);
            this.setData({
                BJ: priceList.BAIJIN,
                HT: priceList.HUANGTONG,
                rightList: vipRightInfo,
            });
            console.log(`=====vipRightInfo=====`, vipRightInfo);
        });
        this.checkStatus(this.data.currentRight);
    },
    getVipInfo() { },
    goRecharge() {
        wx.navigateTo({
            url: `../../../packageMyhome/pages/choosePay/choosePay?payInfo=${JSON.stringify(this.data.selectValue)}`,
        });
    },
    swiperChange(e) {
        console.log(e.detail.current);
        this.checkStatus(e.detail.current);
    },
    checkStatus(currentRight) {
        const { userInfo } = this.data;
        if (userInfo.vipType === "platinum" && currentRight === 0) {
            this.setData({
                payBarStatus: {
                    isShow: false,
                },
                currentRight: currentRight,
            });
            return;
        }
        else if ((userInfo.vipType === "platinum" && currentRight === 1) ||
            (userInfo.vipType === "bronze" && currentRight === 0)) {
            this.setData({
                payBarStatus: {
                    isShow: true,
                    content: "立即续费",
                },
                currentRight: currentRight,
            });
        }
        else if (userInfo.vipType === "bronze" && currentRight === 1) {
            this.setData({
                payBarStatus: {
                    isShow: true,
                    content: "立即升级",
                },
                currentRight: currentRight,
            });
        }
    },
    selectPrice(e) {
        console.log(e.currentTarget.dataset);
        const { BJ, HT } = this.data;
        let currentPrice = 0;
        let selectValue = {};
        const { selectIndex, currentRight } = e.currentTarget.dataset;
        const priceList = currentRight === 0 ? HT.priceList : BJ.priceList;
        priceList.forEach((item, index) => {
            if (index === selectIndex) {
                item.select = true;
            }
            else {
                item.select = false;
            }
        });
        if (currentRight === 0) {
            HT.priceList = priceList;
            currentPrice = HT.priceList[selectIndex].value;
            selectValue = HT.priceList[selectIndex];
        }
        else {
            currentPrice = BJ.priceList[selectIndex].value;
            BJ.priceList = priceList;
            selectValue = BJ.priceList[selectIndex];
        }
        this.setData({
            BJ,
            HT,
            currentPrice,
            selectValue: Object.assign({}, selectValue, { vipType: currentRight === 0 ? "bronze" : "platinum" }),
        });
        console.log(this.data.HT.priceList);
        console.log(this.data.BJ.priceList);
        console.log(`vipCenter selectValue:`, selectValue);
    },
    onReady: function () { },
    onShow: function () { },
    onHide: function () { },
    onUnload: function () { },
    onPullDownRefresh: function () { },
    onReachBottom: function () { },
});
//# sourceMappingURL=data:application/json;base64,
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vipService_1 = require("./config/vipService");
Page({
    data: {
        BJ: vipService_1.BAIJIN,
        HT: vipService_1.HUANGTONG,
        rightList: vipService_1.RIGHTLIST,
        swiper: {
            indicatorDots: true,
            vertical: false,
            autoplay: false,
            interval: 2000,
            duration: 500
        },
        currentRight: 0,
    },
    onLoad: function () { },
    goRecharge() {
        wx.navigateTo({
            url: `../../../packageMyhome/pages/recharge/recharge`,
        });
    },
    swiperChange(e) {
        console.log(e.detail.current);
        this.setData({
            currentRight: e.detail.current,
        });
    },
    selectPrice(e) {
        console.log(e.currentTarget.dataset);
        const { BJ, HT } = this.data;
        const { selectIndex, currentRight } = e.currentTarget.dataset;
        const priceList = currentRight === 0 ? HT.priceList : BJ.priceList;
        priceList.forEach((item, index) => {
            if (index === selectIndex) {
                item.select = true;
            }
            else {
                item.select = false;
            }
            ;
        });
        if (currentRight === 0) {
            HT.priceList = priceList;
        }
        else {
            BJ.priceList = priceList;
        }
        ;
        this.setData({
            BJ,
            HT
        });
        console.log(this.data.HT.priceList);
        console.log(this.data.BJ.priceList);
    },
    onReady: function () { },
    onShow: function () { },
    onHide: function () { },
    onUnload: function () { },
    onPullDownRefresh: function () { },
    onReachBottom: function () { },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlwQ2VudGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmlwQ2VudGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0RBQW1FO0FBRW5FLElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLEVBQUUsRUFBRSxtQkFBTTtRQUNWLEVBQUUsRUFBRSxzQkFBUztRQUNiLFNBQVMsRUFBRSxzQkFBUztRQUNwQixNQUFNLEVBQUU7WUFDTixhQUFhLEVBQUUsSUFBSTtZQUNuQixRQUFRLEVBQUUsS0FBSztZQUNmLFFBQVEsRUFBRSxLQUFLO1lBQ2YsUUFBUSxFQUFFLElBQUk7WUFDZCxRQUFRLEVBQUUsR0FBRztTQUNkO1FBQ0QsWUFBWSxFQUFFLENBQUM7S0FDaEI7SUFFRCxNQUFNLEVBQUUsY0FBYSxDQUFDO0lBR3RCLFVBQVU7UUFDUixFQUFFLENBQUMsVUFBVSxDQUFDO1lBQ1osR0FBRyxFQUFFLGdEQUFnRDtTQUN0RCxDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsWUFBWSxDQUFDLENBQU07UUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixZQUFZLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPO1NBQy9CLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxXQUFXLENBQUMsQ0FBTTtRQUNoQixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDcEMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQzVCLE1BQU0sRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUM7UUFDOUQsTUFBTSxTQUFTLEdBQUcsWUFBWSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQztRQUNuRSxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ2hDLElBQUksS0FBSyxLQUFLLFdBQVcsRUFBRTtnQkFBRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQTthQUFFO2lCQUFNO2dCQUFFLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFBO2FBQUM7WUFBQSxDQUFDO1FBQ2hGLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxZQUFZLEtBQUssQ0FBQyxFQUFFO1lBQUUsRUFBRSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7U0FBRTthQUFNO1lBQUUsRUFBRSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUE7U0FBQztRQUFBLENBQUM7UUFDdkYsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLEVBQUU7WUFDRixFQUFFO1NBQ0gsQ0FBQyxDQUFDO1FBRUgsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUNuQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ3JDLENBQUM7SUFFRCxPQUFPLEVBQUUsY0FBYSxDQUFDO0lBRXZCLE1BQU0sRUFBRSxjQUFhLENBQUM7SUFFdEIsTUFBTSxFQUFFLGNBQWEsQ0FBQztJQUV0QixRQUFRLEVBQUUsY0FBYSxDQUFDO0lBRXhCLGlCQUFpQixFQUFFLGNBQWEsQ0FBQztJQUVqQyxhQUFhLEVBQUUsY0FBYSxDQUFDO0NBQzlCLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJBSUpJTiwgSFVBTkdUT05HLCBSSUdIVExJU1QgfSBmcm9tICcuL2NvbmZpZy92aXBTZXJ2aWNlJztcblxuUGFnZSh7XG4gIGRhdGE6IHtcbiAgICBCSjogQkFJSklOLFxuICAgIEhUOiBIVUFOR1RPTkcsXG4gICAgcmlnaHRMaXN0OiBSSUdIVExJU1QsXG4gICAgc3dpcGVyOiB7XG4gICAgICBpbmRpY2F0b3JEb3RzOiB0cnVlLFxuICAgICAgdmVydGljYWw6IGZhbHNlLFxuICAgICAgYXV0b3BsYXk6IGZhbHNlLFxuICAgICAgaW50ZXJ2YWw6IDIwMDAsXG4gICAgICBkdXJhdGlvbjogNTAwXG4gICAgfSxcbiAgICBjdXJyZW50UmlnaHQ6IDAsIC8vIDAtaHVhbmd0b25nIDEtYmFpamluXG4gIH0sXG5cbiAgb25Mb2FkOiBmdW5jdGlvbiAoKSB7fSxcblxuICAvKiog5YWF5YC8ICovXG4gIGdvUmVjaGFyZ2UoKTogYW55IHtcbiAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgIHVybDogYC4uLy4uLy4uL3BhY2thZ2VNeWhvbWUvcGFnZXMvcmVjaGFyZ2UvcmVjaGFyZ2VgLFxuICAgIH0pXG4gIH0sXG5cbiAgc3dpcGVyQ2hhbmdlKGU6IGFueSkge1xuICAgIGNvbnNvbGUubG9nKGUuZGV0YWlsLmN1cnJlbnQpO1xuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgY3VycmVudFJpZ2h0OiBlLmRldGFpbC5jdXJyZW50LCBcbiAgICB9KTtcbiAgfSxcblxuICBzZWxlY3RQcmljZShlOiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZyhlLmN1cnJlbnRUYXJnZXQuZGF0YXNldClcbiAgICBjb25zdCB7IEJKLCBIVH0gPSB0aGlzLmRhdGE7XG4gICAgY29uc3QgeyBzZWxlY3RJbmRleCwgY3VycmVudFJpZ2h0IH0gPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldDtcbiAgICBjb25zdCBwcmljZUxpc3QgPSBjdXJyZW50UmlnaHQgPT09IDAgPyBIVC5wcmljZUxpc3QgOiBCSi5wcmljZUxpc3Q7XG4gICAgcHJpY2VMaXN0LmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7IFxuICAgICAgaWYgKGluZGV4ID09PSBzZWxlY3RJbmRleCkgeyBpdGVtLnNlbGVjdCA9IHRydWUgfSBlbHNlIHsgaXRlbS5zZWxlY3QgPSBmYWxzZX07XG4gICAgfSk7XG4gICAgaWYgKGN1cnJlbnRSaWdodCA9PT0gMCkgeyBIVC5wcmljZUxpc3QgPSBwcmljZUxpc3Q7IH0gZWxzZSB7IEJKLnByaWNlTGlzdCA9IHByaWNlTGlzdH07XG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICBCSixcbiAgICAgIEhUXG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGEuSFQucHJpY2VMaXN0KVxuICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YS5CSi5wcmljZUxpc3QpXG4gIH0sXG5cbiAgb25SZWFkeTogZnVuY3Rpb24gKCkge30sXG5cbiAgb25TaG93OiBmdW5jdGlvbiAoKSB7fSxcblxuICBvbkhpZGU6IGZ1bmN0aW9uICgpIHt9LFxuXG4gIG9uVW5sb2FkOiBmdW5jdGlvbiAoKSB7fSxcblxuICBvblB1bGxEb3duUmVmcmVzaDogZnVuY3Rpb24gKCkge30sXG5cbiAgb25SZWFjaEJvdHRvbTogZnVuY3Rpb24gKCkge30sXG59KSJdfQ==
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../../service/api.service");
const utils = require("../../../utils/utils");
const app = getApp();
Page({
    data: {
        userInfo: {},
        hasUserInfo: false,
        canIUse: wx.canIUse("button.open-type.getUserInfo"),
        smsDisable: false,
        smsTime: 59,
        phone: "",
        submitDisable: false,
        totalMoney: 0,
    },
    onLoad() {
        console.log(`userinfo: `, app.globalData.userInfo);
        const userInfo = wx.getStorageSync("userInfo");
        this.setData({
            userInfo: app.globalData.userInfo,
            totalMoney: userInfo.coin,
            hasUserInfo: true,
        });
    },
    bindPhoneInput(e) {
        this.setData({
            phone: e.detail.value,
        });
    },
    getPhoneCode() {
        const { phone } = this.data;
        if (!utils.validateEmpty(phone, "请输入手机号")) {
            return false;
        }
    },
    goRegister() {
        wx.navigateTo({
            url: "../registerphone/registerphone",
        });
    },
    goHome() {
        wx.navigateTo({
            url: "../home/home",
        });
    },
    getUserInfo(e) {
        app.globalData.userInfo = e.detail.userInfo;
        this.setData({
            userInfo: e.detail.userInfo,
            hasUserInfo: true,
        });
        this.IsFirstTime() ? this.goRegister() : this.goHome();
    },
    IsFirstTime() {
        return false;
    },
    jumpOver() {
        wx.navigateTo({
            url: "../home/home",
        });
    },
    next() {
        wx.navigateTo({
            url: "../matching/matching",
        });
    },
    formSubmit(e) {
        this.setData({
            submitDisable: true,
        });
        const params = e.detail.value;
        if (!utils.validateEmpty(params.money, "请输入充值金额")) {
            this.setData({
                submitDisable: false,
            });
            return false;
        }
        if (!utils.validateMoney(params.money, "请输入小数点保留2位的金额")) {
            this.setData({
                submitDisable: false,
            });
            return false;
        }
        Api.rechargeMoney(Object.assign({}, params, { money: +params.money })).then((result) => {
            console.log(`recharge money request:`, result);
            this.setData({
                submitDisable: true,
            });
            this.callWxForPay(result.data);
        });
    },
    callWxForPay(data) {
        const _this = this;
        wx.requestPayment({
            timeStamp: data.timeStamp,
            nonceStr: data.nonceStr,
            package: "prepay_id=" + data.prepayId,
            signType: "MD5",
            paySign: data.paySign,
            success(res) {
                console.log(`付款成功: `, res);
            },
            fail(res) {
                console.log(`付款失败: `, res);
            },
            complete(res) {
                console.log(`付款结束complete: `, res);
                Api.checkOrderStatus(data.orderNum).then((result) => {
                    if (result && result.code === 200) {
                        console.log(`check order result`);
                        utils.showModelAction("支付成功", () => {
                            wx.navigateBack({
                                delta: 1,
                            });
                        });
                        _this.setData({
                            submitDisable: false,
                        });
                    }
                    else {
                        _this.setData({
                            submitDisable: false,
                        });
                        utils.showModal("支付失败", result.message);
                    }
                });
            },
        });
    },
    formReset() { },
});
//# sourceMappingURL=data:application/json;base64,
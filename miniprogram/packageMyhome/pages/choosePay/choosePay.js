"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../../service/api.service");
Page({
    data: {
        payInfo: {},
        userInfo: {},
    },
    onLoad: function (options) {
        const user = wx.getStorageSync("userInfo");
        console.log("userInfo", user);
        this.setData({
            userInfo: Object.assign({}, user, { vipType: "bronze", vipExpireAt: "2020.12.31" }),
        });
        console.log(`===options===`, options);
        if (options.payInfo) {
            this.setData({
                payInfo: JSON.parse(options.payInfo),
            });
        }
    },
    wxPay: function () {
        const reqParams = this.preparePayInfo();
        Api.buyVipByWechat(reqParams).then((result) => {
            console.log(result);
            if (result && result.code === 200) {
                let data = result.data;
                this.callWxForPay(data);
            }
        });
        console.log("wxPay");
    },
    callWxForPay: function (data) {
        const that = this;
        wx.requestPayment({
            timeStamp: data.timeStamp,
            nonceStr: data.nonceStr,
            package: "prepay_id=" + data.prepayId,
            signType: "MD5",
            paySign: data.paySign,
            success(res) {
                console.log(`付款成功: `, res);
            },
            fail(res) {
                console.log(`付款失败: `, res);
            },
            complete(res) {
                console.log(`付款结束complete: `, res);
                Api.checkOrderStatus(data.orderNum).then((result) => {
                    if (result && result.code === 200) {
                        that.requestForUserInfo();
                        wx.navigateTo({
                            url: `../paySuccess/paySuccess`,
                        });
                    }
                });
            },
        });
    },
    requestForUserInfo() {
        Api.getUserInfo(this.data.userInfo.openid).then((result) => {
            if (result) {
                const userInfo = result.data;
                this.setData({
                    userInfo,
                });
                wx.setStorageSync("userInfo", userInfo);
            }
        });
    },
    preparePayInfo: function () {
        const reqParams = {};
        const { userInfo, payInfo } = this.data;
        console.log(userInfo.vipType);
        console.log(payInfo);
        switch (userInfo.vipType) {
            case "bronze":
                if (payInfo.vipType === "bronze") {
                    reqParams.payType = "renew";
                }
                else {
                    reqParams.payType = "upgrade";
                }
                reqParams.period = payInfo.name;
                reqParams.vipType = payInfo.vipType;
                break;
            case "platinum":
                reqParams.payType = "renew";
                reqParams.period = payInfo.name;
                reqParams.vipType = "platinum";
                break;
            default:
                reqParams.payType = "join";
                reqParams.period = payInfo.name;
                reqParams.vipType = payInfo.vipType;
                break;
        }
        return reqParams;
    },
    coinPay: function () {
        console.log("coinPay");
    },
    onReady: function () { },
    onShow: function () { },
    onHide: function () { },
    onUnload: function () { },
    onPullDownRefresh: function () { },
    onReachBottom: function () { },
});
//# sourceMappingURL=data:application/json;base64,
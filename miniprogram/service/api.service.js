"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const httpServer_1 = require("./httpServer");
const getOpenid = (code) => httpServer_1.default.get({ url: `/users/openidfromwx/${code}` });
exports.getOpenid = getOpenid;
const register = (user) => httpServer_1.default.post({ url: '/users/register', data: user });
exports.register = register;
const getUserInfo = (id) => httpServer_1.default.get({ url: `/users/getUserInfo/${id}` });
exports.getUserInfo = getUserInfo;
const updateUser = (user) => httpServer_1.default.post({ url: `/users/updateUserInfo`, data: user });
exports.updateUser = updateUser;
const putUsersLike = (openid) => httpServer_1.default.put({ url: `/users/like/${openid}` });
exports.putUsersLike = putUsersLike;
const getUsersLikeCount = () => httpServer_1.default.get({ url: `/users/like/count` });
exports.getUsersLikeCount = getUsersLikeCount;
const getUsersListLikes = () => httpServer_1.default.get({ url: `/users/listLikes` });
exports.getUsersListLikes = getUsersListLikes;
const getPsyList = () => httpServer_1.default.get({ url: `/psychological-test/list` });
exports.getPsyList = getPsyList;
const getPsyTest = (id) => httpServer_1.default.get({ url: `/psychological-test/${id}` });
exports.getPsyTest = getPsyTest;
const getFortune = (fortuneName) => httpServer_1.default.get({ url: `/fortune/${fortuneName}` });
exports.getFortune = getFortune;
const getHoroscopet = (consName, type) => httpServer_1.default.get({ url: `/horoscope/realtime?consName=${consName}&type=${type}` });
exports.getHoroscopet = getHoroscopet;
const getAccessToken = () => httpServer_1.default.get({ url: '/mini/getAccessToken' });
exports.getAccessToken = getAccessToken;
const getUserDetail = (id) => httpServer_1.default.get({ url: `/user/getUserInfo?id=${id}` });
exports.getUserDetail = getUserDetail;
const getCityList = (params) => httpServer_1.default.post({ url: `/user/district`, data: params });
exports.getCityList = getCityList;
const getAllDistrict = (params) => httpServer_1.default.post({ url: `/user/allDistrict`, data: params });
exports.getAllDistrict = getAllDistrict;
const createShop = (params) => httpServer_1.default.post({ url: `/shop/createShop`, data: params });
exports.createShop = createShop;
const updateShop = (params) => httpServer_1.default.post({ url: `/shop/updateShop`, data: params });
exports.updateShop = updateShop;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhcGkuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLDZDQUFzQztBQVF0QyxNQUFNLFNBQVMsR0FBRyxDQUFDLElBQVksRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsdUJBQXVCLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztBQWlHekYsOEJBQVM7QUF6RlgsTUFBTSxRQUFRLEdBQUcsQ0FBQyxJQUFVLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLGlCQUFpQixFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBMEZ2Riw0QkFBUTtBQXBGVixNQUFNLFdBQVcsR0FBRyxDQUFDLEVBQVUsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsc0JBQXNCLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztBQXNGdEYsa0NBQVc7QUFoRmIsTUFBTSxVQUFVLEdBQUcsQ0FBQyxJQUFVLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLHVCQUF1QixFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBK0UvRixnQ0FBVTtBQTFFWixNQUFNLFlBQVksR0FBRyxDQUFDLE1BQWMsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsZUFBZSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7QUE0RXhGLG9DQUFZO0FBdkVkLE1BQU0saUJBQWlCLEdBQUcsR0FBRyxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDO0FBd0UzRSw4Q0FBaUI7QUFuRW5CLE1BQU0saUJBQWlCLEdBQUcsR0FBRyxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDO0FBb0UxRSw4Q0FBaUI7QUEvRG5CLE1BQU0sVUFBVSxHQUFHLEdBQUcsRUFBRSxDQUFDLG9CQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLDBCQUEwQixFQUFFLENBQUMsQ0FBQztBQWdFM0UsZ0NBQVU7QUEzRFosTUFBTSxVQUFVLEdBQUcsQ0FBQyxFQUFVLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLHVCQUF1QixFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7QUE0RHRGLGdDQUFVO0FBdkRaLE1BQU0sVUFBVSxHQUFHLENBQUMsV0FBbUIsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsWUFBWSxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7QUF3RDdGLGdDQUFVO0FBbkRaLE1BQU0sYUFBYSxHQUFHLENBQUMsUUFBZ0IsRUFBRSxJQUFZLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLGdDQUFnQyxRQUFRLFNBQVMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBb0R6SSxzQ0FBYTtBQTlDZixNQUFNLGNBQWMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxvQkFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxzQkFBc0IsRUFBRSxDQUFDLENBQUM7QUFnRDNFLHdDQUFjO0FBdkNoQixNQUFNLGFBQWEsR0FBRyxDQUFDLEVBQU8sRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsd0JBQXdCLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztBQTRDdkYsc0NBQWE7QUF2Q2YsTUFBTSxXQUFXLEdBQUcsQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBbUM1RixrQ0FBVztBQTdCYixNQUFNLGNBQWMsR0FBRyxDQUFDLE1BQVcsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7QUE4QmxHLHdDQUFjO0FBeEJoQixNQUFNLFVBQVUsR0FBRyxDQUFDLE1BQVcsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7QUF5QjdGLGdDQUFVO0FBbkJaLE1BQU0sVUFBVSxHQUFHLENBQUMsTUFBVyxFQUFFLEVBQUUsQ0FBQyxvQkFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztBQW9CN0YsZ0NBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIGltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnJztcbmltcG9ydCBodHRwU2VydmVyIGZyb20gJy4vaHR0cFNlcnZlcic7XG5cbmltcG9ydCBVc2VyIGZyb20gJy4uL2ludGVyZmFjZS91c2VyJztcblxuLyoqXG4gKiDku47lvq7kv6Hojrflj5ZvcGVuaWRcbiAqIEBwYXJhbSB7Y29kZTogd3gubG9naW4oKS5jb2RlfVxuICovXG5jb25zdCBnZXRPcGVuaWQgPSAoY29kZTogc3RyaW5nKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogYC91c2Vycy9vcGVuaWRmcm9td3gvJHtjb2RlfWAgfSk7XG5cbi8vIGNvbnN0IGdldE9wZW5pZCA9IChjb2RlOiBzdHJpbmcpID0+IGh0dHBTZXJ2ZXIuZ2V0KHsgdXJsOiAnL21pbmkvZ2V0T3BlbmlkP2NvZGU9JyArIGNvZGUgfSk7XG5cbi8qKlxuICog5Yib5bu655So5oi3XG4gKiBAcGFyYW0ge3VzZXI6IFVzZXIgfVxuICovXG5jb25zdCByZWdpc3RlciA9ICh1c2VyOiBVc2VyKSA9PiBodHRwU2VydmVyLnBvc3QoeyB1cmw6ICcvdXNlcnMvcmVnaXN0ZXInLCBkYXRhOiB1c2VyIH0pO1xuXG4vKipcbiAqIOiOt+WPlueUqOaIt+S/oeaBr1xuICogQHBhcmFtIHt9XG4gKi9cbmNvbnN0IGdldFVzZXJJbmZvID0gKGlkOiBzdHJpbmcpID0+IGh0dHBTZXJ2ZXIuZ2V0KHsgdXJsOiBgL3VzZXJzL2dldFVzZXJJbmZvLyR7aWR9YCB9KTtcblxuLyoqXG4gKiDmm7TmlrDnlKjmiLfkv6Hmga9cbiAqIEBwYXJhbSB7fVxuICovXG5jb25zdCB1cGRhdGVVc2VyID0gKHVzZXI6IFVzZXIpID0+IGh0dHBTZXJ2ZXIucG9zdCh7IHVybDogYC91c2Vycy91cGRhdGVVc2VySW5mb2AsIGRhdGE6IHVzZXIgfSk7XG5cbi8qKlxuICog5YWz5rOoKOaUtuiXjynmjqXlj6NcbiAqL1xuY29uc3QgcHV0VXNlcnNMaWtlID0gKG9wZW5pZDogc3RyaW5nKSA9PiBodHRwU2VydmVyLnB1dCh7IHVybDogYC91c2Vycy9saWtlLyR7b3BlbmlkfWAgfSk7XG5cbi8qKlxuICog6I635Y+W5Zac5qyi55qE57G75Yir5ZKM5pWw6YePXG4gKi9cbmNvbnN0IGdldFVzZXJzTGlrZUNvdW50ID0gKCkgPT4gaHR0cFNlcnZlci5nZXQoeyB1cmw6IGAvdXNlcnMvbGlrZS9jb3VudGAgfSk7XG5cbi8qKlxuICog6I635Y+W5a+55bqU5Zac5qyi57G75Yir55qE55So5oi35YiX6KGoXG4gKi9cbmNvbnN0IGdldFVzZXJzTGlzdExpa2VzID0gKCkgPT4gaHR0cFNlcnZlci5nZXQoeyB1cmw6IGAvdXNlcnMvbGlzdExpa2VzYCB9KTtcblxuLyoqXG4gKiDojrflj5blv4Pph4zmtYvor5XnmoTpopjnm67liJfooahcbiAqL1xuY29uc3QgZ2V0UHN5TGlzdCA9ICgpID0+IGh0dHBTZXJ2ZXIuZ2V0KHsgdXJsOiBgL3BzeWNob2xvZ2ljYWwtdGVzdC9saXN0YCB9KTtcblxuLyoqXG4gKiDojrflj5blv4Pph4zmtYvor5XnmoTpopjnm67liJfooahcbiAqL1xuY29uc3QgZ2V0UHN5VGVzdCA9IChpZDogc3RyaW5nKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogYC9wc3ljaG9sb2dpY2FsLXRlc3QvJHtpZH1gIH0pO1xuXG4vKipcbiAqIOiOt+WPluaYn+W6p+ivpuino1xuICovXG5jb25zdCBnZXRGb3J0dW5lID0gKGZvcnR1bmVOYW1lOiBzdHJpbmcpID0+IGh0dHBTZXJ2ZXIuZ2V0KHsgdXJsOiBgL2ZvcnR1bmUvJHtmb3J0dW5lTmFtZX1gIH0pO1xuXG4vKipcbiAqIOaYn+W6p+i/kOWKv+ivpuino1xuICovXG5jb25zdCBnZXRIb3Jvc2NvcGV0ID0gKGNvbnNOYW1lOiBzdHJpbmcsIHR5cGU6IHN0cmluZykgPT4gaHR0cFNlcnZlci5nZXQoeyB1cmw6IGAvaG9yb3Njb3BlL3JlYWx0aW1lP2NvbnNOYW1lPSR7Y29uc05hbWV9JnR5cGU9JHt0eXBlfWAgfSk7XG5cblxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuY29uc3QgZ2V0QWNjZXNzVG9rZW4gPSAoKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogJy9taW5pL2dldEFjY2Vzc1Rva2VuJyB9KTtcblxuXG4vLyBjb25zdCByZWdpc3RlciA9ICh1c2VyOiBhbnkpID0+IGh0dHBTZXJ2ZXIucG9zdCh7IHVybDogJy91c2VyL2luc2VydFVzZXInLCBkYXRhOiB1c2VyIH0pO1xuXG4vKipcbiAqIOiOt+WPlueUqOaIt+S/oeaBr1xuICogQHBhcmFtIHt9XG4gKi9cbmNvbnN0IGdldFVzZXJEZXRhaWwgPSAoaWQ6IGFueSkgPT4gaHR0cFNlcnZlci5nZXQoeyB1cmw6IGAvdXNlci9nZXRVc2VySW5mbz9pZD0ke2lkfWAgfSk7XG4vKipcbiAqIOiOt+WPluWfjuW4guWIl+ihqFxuICogQHBhcmFtIHt9XG4gKi9cbmNvbnN0IGdldENpdHlMaXN0ID0gKHBhcmFtczogYW55KSA9PiBodHRwU2VydmVyLnBvc3QoeyB1cmw6IGAvdXNlci9kaXN0cmljdGAsIGRhdGE6IHBhcmFtcyB9KTtcblxuLyoqXG4gKiDojrflj5bln47luILliJfooahcbiAqIEBwYXJhbSB7fVxuICovXG5jb25zdCBnZXRBbGxEaXN0cmljdCA9IChwYXJhbXM6IGFueSkgPT4gaHR0cFNlcnZlci5wb3N0KHsgdXJsOiBgL3VzZXIvYWxsRGlzdHJpY3RgLCBkYXRhOiBwYXJhbXMgfSk7XG5cbi8qKlxuICog5Yib5bu65bqX6ZO6XG4gKiBAcGFyYW0ge31cbiAqL1xuY29uc3QgY3JlYXRlU2hvcCA9IChwYXJhbXM6IGFueSkgPT4gaHR0cFNlcnZlci5wb3N0KHsgdXJsOiBgL3Nob3AvY3JlYXRlU2hvcGAsIGRhdGE6IHBhcmFtcyB9KTtcblxuLyoqXG4gKiDmm7TmlrDlupfpk7pcbiAqIEBwYXJhbSB7fVxuICovXG5jb25zdCB1cGRhdGVTaG9wID0gKHBhcmFtczogYW55KSA9PiBodHRwU2VydmVyLnBvc3QoeyB1cmw6IGAvc2hvcC91cGRhdGVTaG9wYCwgZGF0YTogcGFyYW1zIH0pO1xuXG5cbmV4cG9ydCB7XG4gIGdldE9wZW5pZCxcbiAgcmVnaXN0ZXIsXG4gIHVwZGF0ZVVzZXIsXG4gIGdldFVzZXJJbmZvLFxuICBwdXRVc2Vyc0xpa2UsXG4gIGdldFVzZXJzTGlrZUNvdW50LCBcbiAgZ2V0VXNlcnNMaXN0TGlrZXMsXG4gIGdldFBzeUxpc3QsXG4gIGdldFBzeVRlc3QsXG4gIGdldEZvcnR1bmUsXG4gIGdldEhvcm9zY29wZXQsXG5cbiAgZ2V0QWNjZXNzVG9rZW4sXG4gIGdldENpdHlMaXN0LFxuICBnZXRBbGxEaXN0cmljdCxcbiAgY3JlYXRlU2hvcCxcbiAgdXBkYXRlU2hvcCxcbiAgZ2V0VXNlckRldGFpbCxcbiAgLy8gcmVnaXN0ZXIsXG59XG5cbiJdfQ==
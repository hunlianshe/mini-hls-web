"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const httpServer_1 = require("./httpServer");
const getOpenid = (code) => httpServer_1.default.get({ url: `/users/openidfromwx/${code}` });
exports.getOpenid = getOpenid;
const register = (user) => httpServer_1.default.post({ url: '/users/register', data: user });
exports.register = register;
const getUserInfo = (id) => httpServer_1.default.get({ url: `/users/getUserInfo/${id}` });
exports.getUserInfo = getUserInfo;
const updateUser = (user) => httpServer_1.default.post({ url: `/users/updateUserInfo`, data: user });
exports.updateUser = updateUser;
const addPhone = (data) => httpServer_1.default.post({ url: `/users/addPhone`, data, });
exports.addPhone = addPhone;
const sendSms = (data) => httpServer_1.default.post({ url: `/users/sendSms`, data, });
exports.sendSms = sendSms;
const putUsersLike = (openid) => httpServer_1.default.put({ url: `/users/like/${openid}` });
exports.putUsersLike = putUsersLike;
const getUsersLikeCount = () => httpServer_1.default.get({ url: `/users/like/count` });
exports.getUsersLikeCount = getUsersLikeCount;
const getUsersListLikes = (data) => httpServer_1.default.post({ url: `/users/listLikes`, data, });
exports.getUsersListLikes = getUsersListLikes;
const getUserList = (data) => httpServer_1.default.post({ url: `/users/listUsers`, data, });
exports.getUserList = getUserList;
const getPsyList = () => httpServer_1.default.get({ url: `/psychological-test/list` });
exports.getPsyList = getPsyList;
const getPsyTest = (id) => httpServer_1.default.get({ url: `/psychological-test/${id}` });
exports.getPsyTest = getPsyTest;
const getFortune = (fortuneName) => httpServer_1.default.get({ url: `/fortune/${fortuneName}` });
exports.getFortune = getFortune;
const getHoroscopet = (consName, type) => httpServer_1.default.get({ url: `/horoscope/realtime?consName=${consName}&type=${type}` });
exports.getHoroscopet = getHoroscopet;
const getAccessToken = () => httpServer_1.default.get({ url: '/mini/getAccessToken' });
exports.getAccessToken = getAccessToken;
const getUserDetail = (id) => httpServer_1.default.get({ url: `/user/getUserInfo?id=${id}` });
exports.getUserDetail = getUserDetail;
const getCityList = (params) => httpServer_1.default.post({ url: `/user/district`, data: params });
exports.getCityList = getCityList;
const getAllDistrict = (params) => httpServer_1.default.post({ url: `/user/allDistrict`, data: params });
exports.getAllDistrict = getAllDistrict;
const createShop = (params) => httpServer_1.default.post({ url: `/shop/createShop`, data: params });
exports.createShop = createShop;
const updateShop = (params) => httpServer_1.default.post({ url: `/shop/updateShop`, data: params });
exports.updateShop = updateShop;
//# sourceMappingURL=data:application/json;base64,
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const httpServer_1 = require("./httpServer");
const getOpenid = (code) => httpServer_1.default.get({ url: '/users/openidfromwx/:code=' + code });
exports.getOpenid = getOpenid;
const insertUser = (user) => httpServer_1.default.post({ url: '/user/insertUser', data: user });
exports.insertUser = insertUser;
const getAccessToken = () => httpServer_1.default.get({ url: '/mini/getAccessToken' });
exports.getAccessToken = getAccessToken;
const updateUser = (params) => httpServer_1.default.post({ url: `/user/updateUser`, data: params });
exports.updateUser = updateUser;
const register = (user) => httpServer_1.default.post({ url: '/user/insertUser', data: user });
exports.register = register;
const getUserInfo = () => httpServer_1.default.get({ url: `/user/userInfo` });
exports.getUserInfo = getUserInfo;
const getUserDetail = (id) => httpServer_1.default.get({ url: `/user/userInfo?id=${id}` });
exports.getUserDetail = getUserDetail;
const getCityList = (params) => httpServer_1.default.post({ url: `/user/district`, data: params });
exports.getCityList = getCityList;
const getAllDistrict = (params) => httpServer_1.default.post({ url: `/user/allDistrict`, data: params });
exports.getAllDistrict = getAllDistrict;
const createShop = (params) => httpServer_1.default.post({ url: `/shop/createShop`, data: params });
exports.createShop = createShop;
const updateShop = (params) => httpServer_1.default.post({ url: `/shop/updateShop`, data: params });
exports.updateShop = updateShop;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhcGkuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLDZDQUFzQztBQU10QyxNQUFNLFNBQVMsR0FBRyxDQUFDLElBQVksRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsNEJBQTRCLEdBQUcsSUFBSSxFQUFFLENBQUMsQ0FBQztBQTREL0YsOEJBQVM7QUFwRFgsTUFBTSxVQUFVLEdBQUcsQ0FBQyxJQUFTLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBc0R6RixnQ0FBVTtBQWpEWixNQUFNLGNBQWMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxvQkFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxzQkFBc0IsRUFBRSxDQUFDLENBQUM7QUFnRDNFLHdDQUFjO0FBekNoQixNQUFNLFVBQVUsR0FBRyxDQUFDLE1BQVcsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7QUEyQzdGLGdDQUFVO0FBekNaLE1BQU0sUUFBUSxHQUFHLENBQUMsSUFBUyxFQUFFLEVBQUUsQ0FBQyxvQkFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztBQWdEdkYsNEJBQVE7QUEzQ1YsTUFBTSxXQUFXLEdBQUcsR0FBRyxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO0FBcUNsRSxrQ0FBVztBQS9CYixNQUFNLGFBQWEsR0FBRyxDQUFDLEVBQU8sRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztBQW9DcEYsc0NBQWE7QUEvQmYsTUFBTSxXQUFXLEdBQUcsQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBMkI1RixrQ0FBVztBQXJCYixNQUFNLGNBQWMsR0FBRyxDQUFDLE1BQVcsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFzQmxHLHdDQUFjO0FBaEJoQixNQUFNLFVBQVUsR0FBRyxDQUFDLE1BQVcsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFpQjdGLGdDQUFVO0FBWFosTUFBTSxVQUFVLEdBQUcsQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBWTdGLGdDQUFVIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBpbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZyc7XG5pbXBvcnQgaHR0cFNlcnZlciBmcm9tICcuL2h0dHBTZXJ2ZXInO1xuXG4vKipcbiAqIOS7juW+ruS/oeiOt+WPlm9wZW5pZFxuICogQHBhcmFtIHtjb2RlOiB3eC5sb2dpbigpLmNvZGV9XG4gKi9cbmNvbnN0IGdldE9wZW5pZCA9IChjb2RlOiBzdHJpbmcpID0+IGh0dHBTZXJ2ZXIuZ2V0KHsgdXJsOiAnL3VzZXJzL29wZW5pZGZyb213eC86Y29kZT0nICsgY29kZSB9KTtcblxuLy8gY29uc3QgZ2V0T3BlbmlkID0gKGNvZGU6IHN0cmluZykgPT4gaHR0cFNlcnZlci5nZXQoeyB1cmw6ICcvbWluaS9nZXRPcGVuaWQ/Y29kZT0nICsgY29kZSB9KTtcblxuLyoqXG4gKiDliJvlu7rnlKjmiLdcbiAqIEBwYXJhbSB7dXNlcn1cbiAqL1xuY29uc3QgaW5zZXJ0VXNlciA9ICh1c2VyOiBhbnkpID0+IGh0dHBTZXJ2ZXIucG9zdCh7IHVybDogJy91c2VyL2luc2VydFVzZXInLCBkYXRhOiB1c2VyIH0pO1xuXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5jb25zdCBnZXRBY2Nlc3NUb2tlbiA9ICgpID0+IGh0dHBTZXJ2ZXIuZ2V0KHsgdXJsOiAnL21pbmkvZ2V0QWNjZXNzVG9rZW4nIH0pO1xuXG5cbi8qKlxuICog5pu05paw55So5oi35L+h5oGvXG4gKiBAcGFyYW0ge31cbiAqL1xuY29uc3QgdXBkYXRlVXNlciA9IChwYXJhbXM6IGFueSkgPT4gaHR0cFNlcnZlci5wb3N0KHsgdXJsOiBgL3VzZXIvdXBkYXRlVXNlcmAsIGRhdGE6IHBhcmFtcyB9KTtcblxuY29uc3QgcmVnaXN0ZXIgPSAodXNlcjogYW55KSA9PiBodHRwU2VydmVyLnBvc3QoeyB1cmw6ICcvdXNlci9pbnNlcnRVc2VyJywgZGF0YTogdXNlciB9KTtcbi8qKlxuICog6I635Y+W55So5oi35L+h5oGvXG4gKiBAcGFyYW0ge31cbiAqL1xuY29uc3QgZ2V0VXNlckluZm8gPSAoKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogYC91c2VyL3VzZXJJbmZvYCB9KTtcblxuLyoqXG4gKiDojrflj5bnlKjmiLfkv6Hmga9cbiAqIEBwYXJhbSB7fVxuICovXG5jb25zdCBnZXRVc2VyRGV0YWlsID0gKGlkOiBhbnkpID0+IGh0dHBTZXJ2ZXIuZ2V0KHsgdXJsOiBgL3VzZXIvdXNlckluZm8/aWQ9JHtpZH1gIH0pO1xuLyoqXG4gKiDojrflj5bln47luILliJfooahcbiAqIEBwYXJhbSB7fVxuICovXG5jb25zdCBnZXRDaXR5TGlzdCA9IChwYXJhbXM6IGFueSkgPT4gaHR0cFNlcnZlci5wb3N0KHsgdXJsOiBgL3VzZXIvZGlzdHJpY3RgLCBkYXRhOiBwYXJhbXMgfSk7XG5cbi8qKlxuICog6I635Y+W5Z+O5biC5YiX6KGoXG4gKiBAcGFyYW0ge31cbiAqL1xuY29uc3QgZ2V0QWxsRGlzdHJpY3QgPSAocGFyYW1zOiBhbnkpID0+IGh0dHBTZXJ2ZXIucG9zdCh7IHVybDogYC91c2VyL2FsbERpc3RyaWN0YCwgZGF0YTogcGFyYW1zIH0pO1xuXG4vKipcbiAqIOWIm+W7uuW6l+mTulxuICogQHBhcmFtIHt9XG4gKi9cbmNvbnN0IGNyZWF0ZVNob3AgPSAocGFyYW1zOiBhbnkpID0+IGh0dHBTZXJ2ZXIucG9zdCh7IHVybDogYC9zaG9wL2NyZWF0ZVNob3BgLCBkYXRhOiBwYXJhbXMgfSk7XG5cbi8qKlxuICog5pu05paw5bqX6ZO6XG4gKiBAcGFyYW0ge31cbiAqL1xuY29uc3QgdXBkYXRlU2hvcCA9IChwYXJhbXM6IGFueSkgPT4gaHR0cFNlcnZlci5wb3N0KHsgdXJsOiBgL3Nob3AvdXBkYXRlU2hvcGAsIGRhdGE6IHBhcmFtcyB9KTtcblxuXG5leHBvcnQge1xuICBnZXRPcGVuaWQsXG4gIGdldEFjY2Vzc1Rva2VuLFxuICBpbnNlcnRVc2VyLFxuICB1cGRhdGVVc2VyLFxuICBnZXRVc2VySW5mbyxcbiAgZ2V0Q2l0eUxpc3QsXG4gIGdldEFsbERpc3RyaWN0LFxuICBjcmVhdGVTaG9wLFxuICB1cGRhdGVTaG9wLFxuICBnZXRVc2VyRGV0YWlsLFxuICByZWdpc3Rlcixcbn1cblxuIl19
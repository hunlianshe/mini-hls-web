"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const httpServer_1 = require("./httpServer");
const getOpenid = (code) => httpServer_1.default.get({ url: `/users/openidfromwx/${code}` });
exports.getOpenid = getOpenid;
const insertUser = (user) => httpServer_1.default.post({ url: '/user/insertUser', data: user });
exports.insertUser = insertUser;
const getFortune = (fortuneName) => httpServer_1.default.get({ url: `/fortune/${fortuneName}` });
exports.getFortune = getFortune;
const getPsyList = () => httpServer_1.default.get({ url: `/psychological-test/list` });
exports.getPsyList = getPsyList;
const getPsyTest = (id) => httpServer_1.default.get({ url: `/psychological-test/${id}` });
exports.getPsyTest = getPsyTest;
const getHoroscopet = (consName, type) => httpServer_1.default.get({ url: `/horoscope/realtime?consName=${consName}&type=${type}` });
exports.getHoroscopet = getHoroscopet;
const getAccessToken = () => httpServer_1.default.get({ url: '/mini/getAccessToken' });
exports.getAccessToken = getAccessToken;
const updateUser = (params) => httpServer_1.default.post({ url: `/user/updateUser`, data: params });
exports.updateUser = updateUser;
const register = (user) => httpServer_1.default.post({ url: '/user/insertUser', data: user });
exports.register = register;
const getUserInfo = () => httpServer_1.default.get({ url: `/user/userInfo` });
exports.getUserInfo = getUserInfo;
const getUserDetail = (id) => httpServer_1.default.get({ url: `/user/userInfo?id=${id}` });
exports.getUserDetail = getUserDetail;
const getCityList = (params) => httpServer_1.default.post({ url: `/user/district`, data: params });
exports.getCityList = getCityList;
const getAllDistrict = (params) => httpServer_1.default.post({ url: `/user/allDistrict`, data: params });
exports.getAllDistrict = getAllDistrict;
const createShop = (params) => httpServer_1.default.post({ url: `/shop/createShop`, data: params });
exports.createShop = createShop;
const updateShop = (params) => httpServer_1.default.post({ url: `/shop/updateShop`, data: params });
exports.updateShop = updateShop;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhcGkuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLDZDQUFzQztBQVF0QyxNQUFNLFNBQVMsR0FBRyxDQUFDLElBQVksRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsdUJBQXVCLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztBQWlGekYsOEJBQVM7QUF6RVgsTUFBTSxVQUFVLEdBQUcsQ0FBQyxJQUFVLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBMEUxRixnQ0FBVTtBQXJFWixNQUFNLFVBQVUsR0FBRyxDQUFDLFdBQW1CLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLFlBQVksV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBc0U3RixnQ0FBVTtBQWpFWixNQUFNLFVBQVUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxvQkFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSwwQkFBMEIsRUFBRSxDQUFDLENBQUM7QUFrRTNFLGdDQUFVO0FBN0RaLE1BQU0sVUFBVSxHQUFHLENBQUMsRUFBVSxFQUFFLEVBQUUsQ0FBQyxvQkFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBOER0RixnQ0FBVTtBQXhEWixNQUFNLGFBQWEsR0FBRyxDQUFDLFFBQWdCLEVBQUUsSUFBWSxFQUFFLEVBQUUsQ0FBQyxvQkFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxnQ0FBZ0MsUUFBUSxTQUFTLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztBQXlEekksc0NBQWE7QUFwRGYsTUFBTSxjQUFjLEdBQUcsR0FBRyxFQUFFLENBQUMsb0JBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsc0JBQXNCLEVBQUUsQ0FBQyxDQUFDO0FBc0QzRSx3Q0FBYztBQS9DaEIsTUFBTSxVQUFVLEdBQUcsQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBZ0Q3RixnQ0FBVTtBQTlDWixNQUFNLFFBQVEsR0FBRyxDQUFDLElBQVMsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7QUFxRHZGLDRCQUFRO0FBaERWLE1BQU0sV0FBVyxHQUFHLEdBQUcsRUFBRSxDQUFDLG9CQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztBQTBDbEUsa0NBQVc7QUFwQ2IsTUFBTSxhQUFhLEdBQUcsQ0FBQyxFQUFPLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLHFCQUFxQixFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7QUF5Q3BGLHNDQUFhO0FBcENmLE1BQU0sV0FBVyxHQUFHLENBQUMsTUFBVyxFQUFFLEVBQUUsQ0FBQyxvQkFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztBQWdDNUYsa0NBQVc7QUExQmIsTUFBTSxjQUFjLEdBQUcsQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLG1CQUFtQixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBMkJsRyx3Q0FBYztBQXJCaEIsTUFBTSxVQUFVLEdBQUcsQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLG9CQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBc0I3RixnQ0FBVTtBQWhCWixNQUFNLFVBQVUsR0FBRyxDQUFDLE1BQVcsRUFBRSxFQUFFLENBQUMsb0JBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFpQjdGLGdDQUFVIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBpbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZyc7XG5pbXBvcnQgaHR0cFNlcnZlciBmcm9tICcuL2h0dHBTZXJ2ZXInO1xuXG5pbXBvcnQgVXNlciBmcm9tICcuLi9pbnRlcmZhY2UvdXNlcic7XG5cbi8qKlxuICog5LuO5b6u5L+h6I635Y+Wb3BlbmlkXG4gKiBAcGFyYW0ge2NvZGU6IHd4LmxvZ2luKCkuY29kZX1cbiAqL1xuY29uc3QgZ2V0T3BlbmlkID0gKGNvZGU6IHN0cmluZykgPT4gaHR0cFNlcnZlci5nZXQoeyB1cmw6IGAvdXNlcnMvb3BlbmlkZnJvbXd4LyR7Y29kZX1gIH0pO1xuXG4vLyBjb25zdCBnZXRPcGVuaWQgPSAoY29kZTogc3RyaW5nKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogJy9taW5pL2dldE9wZW5pZD9jb2RlPScgKyBjb2RlIH0pO1xuXG4vKipcbiAqIOWIm+W7uueUqOaIt1xuICogQHBhcmFtIHt1c2VyOiBVc2VyIH1cbiAqL1xuY29uc3QgaW5zZXJ0VXNlciA9ICh1c2VyOiBVc2VyKSA9PiBodHRwU2VydmVyLnBvc3QoeyB1cmw6ICcvdXNlci9pbnNlcnRVc2VyJywgZGF0YTogdXNlciB9KTtcblxuLyoqXG4gKiDojrflj5bmmJ/luqfor6bop6NcbiAqL1xuY29uc3QgZ2V0Rm9ydHVuZSA9IChmb3J0dW5lTmFtZTogc3RyaW5nKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogYC9mb3J0dW5lLyR7Zm9ydHVuZU5hbWV9YCB9KTtcblxuLyoqXG4gKiDojrflj5blv4Pph4zmtYvor5XnmoTpopjnm67liJfooahcbiAqL1xuY29uc3QgZ2V0UHN5TGlzdCA9ICgpID0+IGh0dHBTZXJ2ZXIuZ2V0KHsgdXJsOiBgL3BzeWNob2xvZ2ljYWwtdGVzdC9saXN0YCB9KTtcblxuLyoqXG4gKiDojrflj5blv4Pph4zmtYvor5XnmoTpopjnm67liJfooahcbiAqL1xuY29uc3QgZ2V0UHN5VGVzdCA9IChpZDogc3RyaW5nKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogYC9wc3ljaG9sb2dpY2FsLXRlc3QvJHtpZH1gIH0pO1xuXG5cbi8qKlxuICog5pif5bqn6L+Q5Yq/6K+m6KejXG4gKi9cbmNvbnN0IGdldEhvcm9zY29wZXQgPSAoY29uc05hbWU6IHN0cmluZywgdHlwZTogc3RyaW5nKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogYC9ob3Jvc2NvcGUvcmVhbHRpbWU/Y29uc05hbWU9JHtjb25zTmFtZX0mdHlwZT0ke3R5cGV9YCB9KTtcblxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuY29uc3QgZ2V0QWNjZXNzVG9rZW4gPSAoKSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogJy9taW5pL2dldEFjY2Vzc1Rva2VuJyB9KTtcblxuXG4vKipcbiAqIOabtOaWsOeUqOaIt+S/oeaBr1xuICogQHBhcmFtIHt9XG4gKi9cbmNvbnN0IHVwZGF0ZVVzZXIgPSAocGFyYW1zOiBhbnkpID0+IGh0dHBTZXJ2ZXIucG9zdCh7IHVybDogYC91c2VyL3VwZGF0ZVVzZXJgLCBkYXRhOiBwYXJhbXMgfSk7XG5cbmNvbnN0IHJlZ2lzdGVyID0gKHVzZXI6IGFueSkgPT4gaHR0cFNlcnZlci5wb3N0KHsgdXJsOiAnL3VzZXIvaW5zZXJ0VXNlcicsIGRhdGE6IHVzZXIgfSk7XG4vKipcbiAqIOiOt+WPlueUqOaIt+S/oeaBr1xuICogQHBhcmFtIHt9XG4gKi9cbmNvbnN0IGdldFVzZXJJbmZvID0gKCkgPT4gaHR0cFNlcnZlci5nZXQoeyB1cmw6IGAvdXNlci91c2VySW5mb2AgfSk7XG5cbi8qKlxuICog6I635Y+W55So5oi35L+h5oGvXG4gKiBAcGFyYW0ge31cbiAqL1xuY29uc3QgZ2V0VXNlckRldGFpbCA9IChpZDogYW55KSA9PiBodHRwU2VydmVyLmdldCh7IHVybDogYC91c2VyL3VzZXJJbmZvP2lkPSR7aWR9YCB9KTtcbi8qKlxuICog6I635Y+W5Z+O5biC5YiX6KGoXG4gKiBAcGFyYW0ge31cbiAqL1xuY29uc3QgZ2V0Q2l0eUxpc3QgPSAocGFyYW1zOiBhbnkpID0+IGh0dHBTZXJ2ZXIucG9zdCh7IHVybDogYC91c2VyL2Rpc3RyaWN0YCwgZGF0YTogcGFyYW1zIH0pO1xuXG4vKipcbiAqIOiOt+WPluWfjuW4guWIl+ihqFxuICogQHBhcmFtIHt9XG4gKi9cbmNvbnN0IGdldEFsbERpc3RyaWN0ID0gKHBhcmFtczogYW55KSA9PiBodHRwU2VydmVyLnBvc3QoeyB1cmw6IGAvdXNlci9hbGxEaXN0cmljdGAsIGRhdGE6IHBhcmFtcyB9KTtcblxuLyoqXG4gKiDliJvlu7rlupfpk7pcbiAqIEBwYXJhbSB7fVxuICovXG5jb25zdCBjcmVhdGVTaG9wID0gKHBhcmFtczogYW55KSA9PiBodHRwU2VydmVyLnBvc3QoeyB1cmw6IGAvc2hvcC9jcmVhdGVTaG9wYCwgZGF0YTogcGFyYW1zIH0pO1xuXG4vKipcbiAqIOabtOaWsOW6l+mTulxuICogQHBhcmFtIHt9XG4gKi9cbmNvbnN0IHVwZGF0ZVNob3AgPSAocGFyYW1zOiBhbnkpID0+IGh0dHBTZXJ2ZXIucG9zdCh7IHVybDogYC9zaG9wL3VwZGF0ZVNob3BgLCBkYXRhOiBwYXJhbXMgfSk7XG5cblxuZXhwb3J0IHtcbiAgZ2V0T3BlbmlkLFxuICBpbnNlcnRVc2VyLFxuICBnZXRGb3J0dW5lLFxuICBnZXRQc3lMaXN0LFxuICBnZXRQc3lUZXN0LFxuICBnZXRIb3Jvc2NvcGV0LFxuXG4gIGdldEFjY2Vzc1Rva2VuLFxuICB1cGRhdGVVc2VyLFxuICBnZXRVc2VySW5mbyxcbiAgZ2V0Q2l0eUxpc3QsXG4gIGdldEFsbERpc3RyaWN0LFxuICBjcmVhdGVTaG9wLFxuICB1cGRhdGVTaG9wLFxuICBnZXRVc2VyRGV0YWlsLFxuICByZWdpc3Rlcixcbn1cblxuIl19
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const app = getApp();
const Api = require("../../service/api.service");
const config_1 = require("../../config");
const utils_1 = require("../../utils/utils");
Page({
    data: {
        user: { openid: '' },
        group: {},
        currentCity: '',
        selectValue: '',
        cityList: [],
        hotCityList: [],
        popHidden: true,
        hasStorage: false,
        auth: false,
    },
    onLoad: function (options) {
        if (options.auth) {
            this.setData({
                auth: options.auth
            });
        }
        let _this = this;
        wx.getStorageInfo({
            success(res) {
                if (res.keys.indexOf('user') !== -1 &&
                    res.keys.indexOf('currentCity') !== -1 &&
                    res.keys.indexOf('userShopInfo') !== -1 &&
                    !_this.data.auth) {
                    _this.setData({
                        hasStorage: true
                    });
                    setTimeout(() => {
                        wx.switchTab({
                            url: '../home/home',
                        });
                    }, 1500);
                }
                else {
                    _this.getOpenid();
                    if (app.globalData.userLocation) {
                        wx.showLoading({
                            title: '定位中',
                        });
                        wx.getLocation({
                            type: 'wgs84',
                            success(res) {
                                _this.getLocalCity(res.latitude, res.longitude);
                            }
                        });
                    }
                    else {
                        _this.getWeChatCity();
                    }
                }
            }
        });
    },
    getOpenid() {
        let _this = this;
        wx.login({
            success: function (data) {
                Api.getOpenid(data.code).then((result) => {
                    if (result.code === 200) {
                        _this.data.user.openid = result.data.openid;
                        _this.setData({
                            user: _this.data.user
                        });
                    }
                    else {
                    }
                }).catch(() => {
                });
            },
            fail: function (err) {
                console.log('wx.login failed', err);
            }
        });
    },
    getCityList() {
        Api.getCityList({}).then((result) => {
            if (result.code === 200) {
                const cityList = result.data;
                cityList.forEach((e) => {
                    e.data.forEach((city) => {
                        city.name = utils_1.cityReplace(city.name);
                    });
                });
                this.setData({
                    cityList: result.data,
                });
                wx.setStorage({
                    key: 'cityList',
                    data: result.data,
                });
            }
            else { }
        }).catch((err) => {
            console.log('getCityList err', err);
        });
    },
    getHotCityList() {
        Api.getCityList({ hot: 1 }).then((result) => {
            if (result.code === 200) {
                const hotCityList = result.data;
                hotCityList.forEach((e) => {
                    e.name = utils_1.cityReplace(e.name);
                });
                this.setData({
                    hotCityList: result.data,
                });
                wx.setStorage({
                    key: 'hotCityList',
                    data: result.data,
                });
            }
            else { }
        }).catch((err) => {
            console.log('getHotCityList err', err);
        });
    },
    getWeChatCity() {
        let _this = this;
        wx.authorize({
            scope: "scope.userLocation",
            success() {
                wx.showLoading({
                    title: '定位中',
                });
                wx.getLocation({
                    type: 'wgs84',
                    success(res) {
                        app.globalData.userLocation = true;
                        _this.getLocalCity(res.latitude, res.longitude);
                    },
                    fail() {
                        _this.setData({
                            currentCity: "定位失败"
                        });
                    }
                });
            }
        });
    },
    getLocalCity(latitude, longitude) {
        let _this = this;
        wx.request({
            url: 'https://api.map.baidu.com/geocoder/v2/?ak=' + config_1.default.ak + '&location=' + latitude + ',' + longitude + '&output=json',
            data: {},
            header: {
                'Content-Type': 'application/json'
            },
            success: function (res) {
                let city = res.data.result.addressComponent.city;
                city = utils_1.cityReplace(city);
                _this.setData({
                    currentCity: city
                });
                wx.setStorage({
                    key: 'currentCity',
                    data: city,
                });
                wx.hideLoading();
            },
            fail: function () {
                _this.setData({
                    currentCity: "---"
                });
                wx.hideLoading();
            },
        });
    },
    popPicker() {
        let popHidden = this.data.popHidden;
        this.setData({
            popHidden: !popHidden,
        });
    },
    goHome(e) {
        this.getUser(e);
    },
    getUser(e) {
        let userInfo = e.detail.userInfo;
        userInfo.openid = this.data.user.openid;
        if (!userInfo.openid) {
            return;
        }
        Api.insertUser(userInfo).then((result) => {
            if (result.code === 200) {
                userInfo.token = result.data.token;
                wx.setStorage({
                    key: "user",
                    data: userInfo,
                    success: () => {
                        wx.switchTab({
                            url: `../home/home`,
                        });
                    }
                });
            }
        }).catch(() => {
        });
    },
    doSelect(e) {
        if (e.detail.name) {
            this.setData({
                popHidden: true,
                currentCity: e.detail.name,
            });
            wx.setStorage({
                key: 'currentCity',
                data: e.detail.name,
            });
        }
        else {
            this.setData({
                popHidden: true,
            });
        }
    },
    onReady: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,
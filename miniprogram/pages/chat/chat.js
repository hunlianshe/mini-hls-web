"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../service/api.service");
Page({
    data: {
        userInfo: {},
        message: '',
        messageList: [
            {
                "_id": "5f66e2f82735248c31b97bd8",
                "type": 1,
                "cid": "5f66e025bb97350949c52a97",
                "msg": "hello lisa",
                "status": [
                    {
                        "msgUnRead": false,
                        "_id": "5f66e2f82735248c31b97bda",
                        "openid": "oHgB55LJ1wGo2QqEYxgo8tLMxL4A"
                    },
                    {
                        "msgUnRead": true,
                        "_id": "5f66e2f82735248c31b97bd9",
                        "openid": "oHgB55AlhKqR7azr85YYBwfIE9EQ"
                    }
                ],
                "from": "oHgB55LJ1wGo2QqEYxgo8tLMxL4A",
                "updatedAt": "2020-09-20T05:04:56.688Z",
                "createdAt": "2020-09-20T05:04:56.688Z"
            },
        ],
    },
    onLoad: function () {
        this.getUserInfo();
    },
    getOpenid() {
        let openid = '';
        const user = wx.getStorageSync('user');
        openid = user.openid || '';
        return openid;
    },
    getUserInfo() {
        const openid = this.getOpenid();
        Api.getUserInfo(openid).then((result) => {
            if (result) {
                const userInfo = result.data;
                console.log('userInfo:', userInfo);
                this.setData({
                    userInfo
                });
            }
            else {
                throw new Error("获取用户信息失败");
            }
        });
    },
    sendTap() {
        console.log('send message:', this.data.message);
    },
    inputTap(e) {
        console.log('input message:', e);
        this.setData({
            message: e.detail.detail.value
        });
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNoYXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBaUQ7QUFFakQsSUFBSSxDQUFDO0lBRUgsSUFBSSxFQUFFO1FBQ0osUUFBUSxFQUFFLEVBQUU7UUFDWixPQUFPLEVBQUUsRUFBRTtRQUNYLFdBQVcsRUFBRTtZQUNYO2dCQUNFLEtBQUssRUFBRSwwQkFBMEI7Z0JBQ2pDLE1BQU0sRUFBRSxDQUFDO2dCQUNULEtBQUssRUFBRSwwQkFBMEI7Z0JBQ2pDLEtBQUssRUFBRSxZQUFZO2dCQUNuQixRQUFRLEVBQUU7b0JBQ1I7d0JBQ0UsV0FBVyxFQUFFLEtBQUs7d0JBQ2xCLEtBQUssRUFBRSwwQkFBMEI7d0JBQ2pDLFFBQVEsRUFBRSw4QkFBOEI7cUJBQ3pDO29CQUNEO3dCQUNFLFdBQVcsRUFBRSxJQUFJO3dCQUNqQixLQUFLLEVBQUUsMEJBQTBCO3dCQUNqQyxRQUFRLEVBQUUsOEJBQThCO3FCQUN6QztpQkFDRjtnQkFDRCxNQUFNLEVBQUUsOEJBQThCO2dCQUN0QyxXQUFXLEVBQUUsMEJBQTBCO2dCQUN2QyxXQUFXLEVBQUUsMEJBQTBCO2FBQ3hDO1NBQ0Y7S0FDRjtJQUVELE1BQU0sRUFBRTtRQUNOLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsU0FBUztRQUNQLElBQUksTUFBTSxHQUFXLEVBQUUsQ0FBQztRQUN4QixNQUFNLElBQUksR0FBRyxFQUFFLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQztRQUMzQixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNoQyxHQUFHLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQVcsRUFBRSxFQUFFO1lBQzNDLElBQUksTUFBTSxFQUFFO2dCQUNWLE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFBO2dCQUNsQyxJQUFJLENBQUMsT0FBUSxDQUFDO29CQUNaLFFBQVE7aUJBQ1QsQ0FBQyxDQUFDO2FBQ0o7aUJBQU07Z0JBQ0wsTUFBTSxJQUFJLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQzthQUM3QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUdELE9BQU87UUFFTCxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFHRCxRQUFRLENBQUMsQ0FBTTtRQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLE9BQU8sRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLO1NBQy9CLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFLRCxPQUFPLEVBQUU7SUFFVCxDQUFDO0lBS0QsTUFBTSxFQUFFO0lBRVIsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxRQUFRLEVBQUU7SUFFVixDQUFDO0lBS0QsaUJBQWlCLEVBQUU7SUFFbkIsQ0FBQztJQUtELGFBQWEsRUFBRTtJQUVmLENBQUM7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBcGkgZnJvbSAnLi4vLi4vc2VydmljZS9hcGkuc2VydmljZSc7XG5cblBhZ2Uoe1xuXG4gIGRhdGE6IHtcbiAgICB1c2VySW5mbzoge30sIC8vIOeUqOaIt+S/oeaBr1xuICAgIG1lc3NhZ2U6ICcnLCAgLy8g55So5oi36L6T5YWl55qE5raI5oGvXG4gICAgbWVzc2FnZUxpc3Q6IFtcbiAgICAgIHtcbiAgICAgICAgXCJfaWRcIjogXCI1ZjY2ZTJmODI3MzUyNDhjMzFiOTdiZDhcIixcbiAgICAgICAgXCJ0eXBlXCI6IDEsXG4gICAgICAgIFwiY2lkXCI6IFwiNWY2NmUwMjViYjk3MzUwOTQ5YzUyYTk3XCIsXG4gICAgICAgIFwibXNnXCI6IFwiaGVsbG8gbGlzYVwiLFxuICAgICAgICBcInN0YXR1c1wiOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgXCJtc2dVblJlYWRcIjogZmFsc2UsXG4gICAgICAgICAgICBcIl9pZFwiOiBcIjVmNjZlMmY4MjczNTI0OGMzMWI5N2JkYVwiLFxuICAgICAgICAgICAgXCJvcGVuaWRcIjogXCJvSGdCNTVMSjF3R28yUXFFWXhnbzh0TE14TDRBXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFwibXNnVW5SZWFkXCI6IHRydWUsXG4gICAgICAgICAgICBcIl9pZFwiOiBcIjVmNjZlMmY4MjczNTI0OGMzMWI5N2JkOVwiLFxuICAgICAgICAgICAgXCJvcGVuaWRcIjogXCJvSGdCNTVBbGhLcVI3YXpyODVZWUJ3ZklFOUVRXCJcbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiZnJvbVwiOiBcIm9IZ0I1NUxKMXdHbzJRcUVZeGdvOHRMTXhMNEFcIixcbiAgICAgICAgXCJ1cGRhdGVkQXRcIjogXCIyMDIwLTA5LTIwVDA1OjA0OjU2LjY4OFpcIixcbiAgICAgICAgXCJjcmVhdGVkQXRcIjogXCIyMDIwLTA5LTIwVDA1OjA0OjU2LjY4OFpcIlxuICAgICAgfSxcbiAgICBdLFxuICB9LFxuXG4gIG9uTG9hZDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZ2V0VXNlckluZm8oKTtcbiAgfSxcblxuICBnZXRPcGVuaWQoKSB7XG4gICAgbGV0IG9wZW5pZDogc3RyaW5nID0gJyc7XG4gICAgY29uc3QgdXNlciA9IHd4LmdldFN0b3JhZ2VTeW5jKCd1c2VyJyk7XG4gICAgb3BlbmlkID0gdXNlci5vcGVuaWQgfHwgJyc7XG4gICAgcmV0dXJuIG9wZW5pZDtcbiAgfSxcblxuICBnZXRVc2VySW5mbygpIHtcbiAgICBjb25zdCBvcGVuaWQgPSB0aGlzLmdldE9wZW5pZCgpO1xuICAgIEFwaS5nZXRVc2VySW5mbyhvcGVuaWQpLnRoZW4oKHJlc3VsdDogYW55KSA9PiB7XG4gICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgIGNvbnN0IHVzZXJJbmZvID0gcmVzdWx0LmRhdGE7XG4gICAgICAgIGNvbnNvbGUubG9nKCd1c2VySW5mbzonLCB1c2VySW5mbylcbiAgICAgICAgdGhpcy5zZXREYXRhISh7XG4gICAgICAgICAgdXNlckluZm9cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLojrflj5bnlKjmiLfkv6Hmga/lpLHotKVcIik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG5cbiAgLyoqIOWPkemAgea2iOaBr+S6i+S7tiAqL1xuICBzZW5kVGFwKCkge1xuICAgIC8vIFRPRE9cbiAgICBjb25zb2xlLmxvZygnc2VuZCBtZXNzYWdlOicsIHRoaXMuZGF0YS5tZXNzYWdlKTtcbiAgfSxcblxuICAvKiog6L6T5YWl5raI5oGv5YaF5a65ICovXG4gIGlucHV0VGFwKGU6IGFueSkge1xuICAgIGNvbnNvbGUubG9nKCdpbnB1dCBtZXNzYWdlOicsIGUpO1xuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgbWVzc2FnZTogZS5kZXRhaWwuZGV0YWlsLnZhbHVlIC8vIOiOt+WPlui+k+WFpeeahOWAvFxuICAgIH0pXG4gIH0sXG4gIFxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliJ3mrKHmuLLmn5PlrozmiJBcbiAgICovXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouaYvuekulxuICAgKi9cbiAgb25TaG93OiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLpmpDol49cbiAgICovXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Y246L29XG4gICAqL1xuICBvblVubG9hZDogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOmhtemdouebuOWFs+S6i+S7tuWkhOeQhuWHveaVsC0t55uR5ZCs55So5oi35LiL5ouJ5Yqo5L2cXG4gICAqL1xuICBvblB1bGxEb3duUmVmcmVzaDogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOmhtemdouS4iuaLieinpuW6leS6i+S7tueahOWkhOeQhuWHveaVsFxuICAgKi9cbiAgb25SZWFjaEJvdHRvbTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG59KSJdfQ==
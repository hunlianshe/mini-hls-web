"use strict";
Page({
    data: {
        headList: [{
                'src': '../../public/image/male.png',
                'left': '50%',
                'width': '80',
            }],
        headInterval: null,
        matching: true,
    },
    onLoad: function (options) {
        console.log(options);
        let headInterval = setInterval(() => {
            let headList = this.data.headList;
            if (headList.length > 10) {
                clearInterval(headInterval);
                return;
            }
            const windowWidth = wx.getSystemInfoSync().windowWidth;
            let left = 80 + Math.random() * (windowWidth - 160);
            let width = 60 + Math.random() * 40;
            console.log('left', left);
            headList.push({
                'src': '../../public/image/xzpd.png',
                'left': left.toString(),
                'width': width.toString(),
            });
            this.setData({
                headList,
            });
        }, 2000);
        this.setData({
            headInterval,
        });
        setTimeout(() => {
            this.setData({
                matching: false,
            });
            setTimeout(() => {
                wx.navigateTo({
                    url: '../matchResult/matchResult',
                });
            }, 1000);
        }, 3500);
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
        this.setData({
            headInterval: null,
        });
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0Y2hpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJtYXRjaGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBSSxDQUFDO0lBQ0gsSUFBSSxFQUFFO1FBQ0osUUFBUSxFQUFFLENBQUM7Z0JBQ1QsS0FBSyxFQUFFLDZCQUE2QjtnQkFDcEMsTUFBTSxFQUFFLEtBQUs7Z0JBQ2IsT0FBTyxFQUFFLElBQUk7YUFDZCxDQUFDO1FBQ0YsWUFBWSxFQUFFLElBQUk7UUFDbEIsUUFBUSxFQUFFLElBQUk7S0FDZjtJQUtELE1BQU0sRUFBRSxVQUFVLE9BQVk7UUFDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNyQixJQUFJLFlBQVksR0FBRyxXQUFXLENBQUMsR0FBRyxFQUFFO1lBQ2xDLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ2xDLElBQUksUUFBUSxDQUFDLE1BQU0sR0FBRyxFQUFFLEVBQUU7Z0JBQ3hCLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDNUIsT0FBTzthQUNSO1lBQ0QsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixFQUFFLENBQUMsV0FBVyxDQUFBO1lBQ3RELElBQUksSUFBSSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDcEQsSUFBSSxLQUFLLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUM7WUFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDMUIsUUFBUSxDQUFDLElBQUksQ0FBQztnQkFDWixLQUFLLEVBQUUsNkJBQTZCO2dCQUNwQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDdkIsT0FBTyxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUU7YUFDMUIsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLE9BQVEsQ0FBQztnQkFDWixRQUFRO2FBQ1QsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ1QsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLFlBQVk7U0FDYixDQUFDLENBQUM7UUFDSCxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLE9BQVEsQ0FBQztnQkFDWixRQUFRLEVBQUUsS0FBSzthQUNoQixDQUFDLENBQUM7WUFDSCxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNkLEVBQUUsQ0FBQyxVQUFVLENBQUM7b0JBQ1osR0FBRyxFQUFFLDRCQUE0QjtpQkFDbEMsQ0FBQyxDQUFDO1lBQ0wsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ1gsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELE9BQU8sRUFBRTtJQUVULENBQUM7SUFFRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBRUQsTUFBTSxFQUFFO0lBRVIsQ0FBQztJQUVELFFBQVEsRUFBRTtRQUNSLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixZQUFZLEVBQUUsSUFBSTtTQUNuQixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsaUJBQWlCLEVBQUU7SUFFbkIsQ0FBQztJQUtELGFBQWEsRUFBRTtJQUVmLENBQUM7Q0FFRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcblBhZ2Uoe1xuICBkYXRhOiB7XG4gICAgaGVhZExpc3Q6IFt7XG4gICAgICAnc3JjJzogJy4uLy4uL3B1YmxpYy9pbWFnZS9tYWxlLnBuZycsXG4gICAgICAnbGVmdCc6ICc1MCUnLFxuICAgICAgJ3dpZHRoJzogJzgwJyxcbiAgICB9XSxcbiAgICBoZWFkSW50ZXJ2YWw6IG51bGwsXG4gICAgbWF0Y2hpbmc6IHRydWUsXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yqg6L29XG4gICAqL1xuICBvbkxvYWQ6IGZ1bmN0aW9uIChvcHRpb25zOiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZyhvcHRpb25zKTtcbiAgICBsZXQgaGVhZEludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgbGV0IGhlYWRMaXN0ID0gdGhpcy5kYXRhLmhlYWRMaXN0O1xuICAgICAgaWYgKGhlYWRMaXN0Lmxlbmd0aCA+IDEwKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwoaGVhZEludGVydmFsKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc3Qgd2luZG93V2lkdGggPSB3eC5nZXRTeXN0ZW1JbmZvU3luYygpLndpbmRvd1dpZHRoXG4gICAgICBsZXQgbGVmdCA9IDgwICsgTWF0aC5yYW5kb20oKSAqICh3aW5kb3dXaWR0aCAtIDE2MCk7XG4gICAgICBsZXQgd2lkdGggPSA2MCArIE1hdGgucmFuZG9tKCkgKiA0MDtcbiAgICAgIGNvbnNvbGUubG9nKCdsZWZ0JywgbGVmdCk7XG4gICAgICBoZWFkTGlzdC5wdXNoKHtcbiAgICAgICAgJ3NyYyc6ICcuLi8uLi9wdWJsaWMvaW1hZ2UveHpwZC5wbmcnLFxuICAgICAgICAnbGVmdCc6IGxlZnQudG9TdHJpbmcoKSxcbiAgICAgICAgJ3dpZHRoJzogd2lkdGgudG9TdHJpbmcoKSxcbiAgICAgIH0pO1xuICAgICAgdGhpcy5zZXREYXRhISh7XG4gICAgICAgIGhlYWRMaXN0LFxuICAgICAgfSk7XG4gICAgfSwgMjAwMCk7XG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICBoZWFkSW50ZXJ2YWwsXG4gICAgfSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgICAgbWF0Y2hpbmc6IGZhbHNlLFxuICAgICAgfSk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgICAgdXJsOiAnLi4vbWF0Y2hSZXN1bHQvbWF0Y2hSZXN1bHQnLFxuICAgICAgICB9KTtcbiAgICAgIH0sIDEwMDApO1xuICAgIH0sIDM1MDApO1xuICB9LFxuXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIG9uU2hvdzogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgb25IaWRlOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICBvblVubG9hZDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgaGVhZEludGVydmFsOiBudWxsLFxuICAgIH0pO1xuICB9LFxuXG4gIG9uUHVsbERvd25SZWZyZXNoOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog6aG16Z2i5LiK5ouJ6Kem5bqV5LqL5Lu255qE5aSE55CG5Ye95pWwXG4gICAqL1xuICBvblJlYWNoQm90dG9tOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxufSkiXX0=
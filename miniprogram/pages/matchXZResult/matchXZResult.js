"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../service/api.service");
const zxList_1 = require("../../public/json/zxList");
const app = getApp();
Page({
    data: {
        dataIndex: 0,
        me: '',
        he: '',
        fortuneData: {
            title: '',
            grade: '',
            content: ''
        },
        gradeData: [],
        xzList: zxList_1.default.data,
    },
    onLoad: function (options) {
        let me = options.me;
        let he = options.he;
        this.setData({
            me,
            he,
        });
        this.getConstellationMmatchingDetail(me, he);
    },
    myPick: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            me: zxList_1.default.data[e.detail.value].ch,
        });
    },
    otherPick: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            he: zxList_1.default.data[e.detail.value].ch,
        });
    },
    getConstellationMmatchingDetail(me, he) {
        me = me.replace(/座/, '');
        he = he.replace(/座/, '');
        Api.getConstellationMmatchingDetail(me, he).then((result) => {
            let fortuneData = result.data;
            let gradeData = fortuneData.grade.match(/\★{1,5}/g);
            console.log(gradeData);
            this.setData({
                fortuneData,
                gradeData,
            });
        });
    },
    submit() {
        let { me, he } = this.data;
        this.getConstellationMmatchingDetail(me, he);
    },
    onShow: function () {
    },
    goMatch() {
        let userInfo = app.globalData.userInfo;
        if (userInfo && userInfo.phone) {
            wx.navigateTo({
                url: '../matching/matching'
            });
        }
        else {
            wx.navigateTo({
                url: '../registerXz/registerXz'
            });
        }
    },
    onHide: function () {
    },
    onUnload: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0Y2hYWlJlc3VsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1hdGNoWFpSZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBaUQ7QUFDakQscURBQThDO0FBRTlDLE1BQU0sR0FBRyxHQUFHLE1BQU0sRUFBVSxDQUFDO0FBRTdCLElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLFNBQVMsRUFBRSxDQUFDO1FBQ1osRUFBRSxFQUFFLEVBQUU7UUFDTixFQUFFLEVBQUUsRUFBRTtRQUNOLFdBQVcsRUFBRTtZQUNYLEtBQUssRUFBRSxFQUFFO1lBQ1QsS0FBSyxFQUFFLEVBQUU7WUFDVCxPQUFPLEVBQUUsRUFBRTtTQUNaO1FBQ0QsU0FBUyxFQUFFLEVBQUU7UUFDYixNQUFNLEVBQUUsZ0JBQU0sQ0FBQyxJQUFJO0tBQ3BCO0lBRUQsTUFBTSxFQUFFLFVBQVUsT0FBWTtRQUM1QixJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ3BCLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLEVBQUU7WUFDRixFQUFFO1NBQ0gsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLCtCQUErQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsTUFBTSxFQUFFLFVBQVUsQ0FBTTtRQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDaEQsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLEVBQUUsRUFBRSxnQkFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7U0FDbkMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFNBQVMsRUFBRSxVQUFVLENBQU07UUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ2hELElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixFQUFFLEVBQUUsZ0JBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1NBQ25DLENBQUMsQ0FBQztJQUNMLENBQUM7SUFHRCwrQkFBK0IsQ0FBQyxFQUFVLEVBQUUsRUFBVTtRQUNwRCxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDekIsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pCLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDL0QsSUFBSSxXQUFXLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztZQUM5QixJQUFJLFNBQVMsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxPQUFRLENBQUM7Z0JBQ1osV0FBVztnQkFDWCxTQUFTO2FBQ1YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksRUFDRixFQUFFLEVBQ0YsRUFBRSxFQUNILEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNkLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7UUFDdkMsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRTtZQUM5QixFQUFFLENBQUMsVUFBVSxDQUFDO2dCQUNaLEdBQUcsRUFBRSxzQkFBc0I7YUFDNUIsQ0FBQyxDQUFBO1NBQ0g7YUFBTTtZQUNMLEVBQUUsQ0FBQyxVQUFVLENBQUM7Z0JBQ1osR0FBRyxFQUFFLDBCQUEwQjthQUNoQyxDQUFDLENBQUE7U0FDSDtJQUNILENBQUM7SUFNRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztDQUVGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFwaSBmcm9tICcuLi8uLi9zZXJ2aWNlL2FwaS5zZXJ2aWNlJztcclxuaW1wb3J0IHh6TGlzdCBmcm9tICcuLi8uLi9wdWJsaWMvanNvbi96eExpc3QnO1xyXG5pbXBvcnQgeyBJTXlBcHAgfSBmcm9tICcuLi8uLi9hcHAnO1xyXG5jb25zdCBhcHAgPSBnZXRBcHA8SU15QXBwPigpO1xyXG5cclxuUGFnZSh7XHJcbiAgZGF0YToge1xyXG4gICAgZGF0YUluZGV4OiAwLFxyXG4gICAgbWU6ICcnLFxyXG4gICAgaGU6ICcnLFxyXG4gICAgZm9ydHVuZURhdGE6IHtcclxuICAgICAgdGl0bGU6ICcnLFxyXG4gICAgICBncmFkZTogJycsXHJcbiAgICAgIGNvbnRlbnQ6ICcnXHJcbiAgICB9LFxyXG4gICAgZ3JhZGVEYXRhOiBbXSxcclxuICAgIHh6TGlzdDogeHpMaXN0LmRhdGEsXHJcbiAgfSxcclxuXHJcbiAgb25Mb2FkOiBmdW5jdGlvbiAob3B0aW9uczogYW55KSB7XHJcbiAgICBsZXQgbWUgPSBvcHRpb25zLm1lO1xyXG4gICAgbGV0IGhlID0gb3B0aW9ucy5oZTtcclxuICAgIHRoaXMuc2V0RGF0YSEoe1xyXG4gICAgICBtZSxcclxuICAgICAgaGUsXHJcbiAgICB9KVxyXG4gICAgdGhpcy5nZXRDb25zdGVsbGF0aW9uTW1hdGNoaW5nRGV0YWlsKG1lLCBoZSk7XHJcbiAgfSxcclxuXHJcbiAgbXlQaWNrOiBmdW5jdGlvbiAoZTogYW55KSB7XHJcbiAgICBjb25zb2xlLmxvZygncGlja2Vy5Y+R6YCB6YCJ5oup5pS55Y+Y77yM5pC65bim5YC85Li6JywgZS5kZXRhaWwudmFsdWUpXHJcbiAgICB0aGlzLnNldERhdGEhKHtcclxuICAgICAgbWU6IHh6TGlzdC5kYXRhW2UuZGV0YWlsLnZhbHVlXS5jaCxcclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIG90aGVyUGljazogZnVuY3Rpb24gKGU6IGFueSkge1xyXG4gICAgY29uc29sZS5sb2coJ3BpY2tlcuWPkemAgemAieaLqeaUueWPmO+8jOaQuuW4puWAvOS4uicsIGUuZGV0YWlsLnZhbHVlKVxyXG4gICAgdGhpcy5zZXREYXRhISh7XHJcbiAgICAgIGhlOiB4ekxpc3QuZGF0YVtlLmRldGFpbC52YWx1ZV0uY2gsXHJcbiAgICB9KTtcclxuICB9LFxyXG5cclxuICAvKiog6I635Y+W5pif5bqn6K+m6KejICovXHJcbiAgZ2V0Q29uc3RlbGxhdGlvbk1tYXRjaGluZ0RldGFpbChtZTogc3RyaW5nLCBoZTogc3RyaW5nKSB7XHJcbiAgICBtZSA9IG1lLnJlcGxhY2UoL+W6py8sICcnKTtcclxuICAgIGhlID0gaGUucmVwbGFjZSgv5bqnLywgJycpO1xyXG4gICAgQXBpLmdldENvbnN0ZWxsYXRpb25NbWF0Y2hpbmdEZXRhaWwobWUsIGhlKS50aGVuKChyZXN1bHQ6IGFueSkgPT4ge1xyXG4gICAgICBsZXQgZm9ydHVuZURhdGEgPSByZXN1bHQuZGF0YTtcclxuICAgICAgbGV0IGdyYWRlRGF0YSA9IGZvcnR1bmVEYXRhLmdyYWRlLm1hdGNoKC9cXOKYhXsxLDV9L2cpO1xyXG4gICAgICBjb25zb2xlLmxvZyhncmFkZURhdGEpO1xyXG4gICAgICB0aGlzLnNldERhdGEhKHtcclxuICAgICAgICBmb3J0dW5lRGF0YSxcclxuICAgICAgICBncmFkZURhdGEsXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuXHJcbiAgc3VibWl0KCkge1xyXG4gICAgbGV0IHtcclxuICAgICAgbWUsXHJcbiAgICAgIGhlXHJcbiAgICB9ID0gdGhpcy5kYXRhO1xyXG4gICAgdGhpcy5nZXRDb25zdGVsbGF0aW9uTW1hdGNoaW5nRGV0YWlsKG1lLCBoZSk7XHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLmmL7npLpcclxuICAgKi9cclxuICBvblNob3c6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgfSxcclxuXHJcbiAgZ29NYXRjaCgpIHtcclxuICAgIGxldCB1c2VySW5mbyA9IGFwcC5nbG9iYWxEYXRhLnVzZXJJbmZvO1xyXG4gICAgaWYgKHVzZXJJbmZvICYmIHVzZXJJbmZvLnBob25lKSB7XHJcbiAgICAgIHd4Lm5hdmlnYXRlVG8oe1xyXG4gICAgICAgIHVybDogJy4uL21hdGNoaW5nL21hdGNoaW5nJ1xyXG4gICAgICB9KVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgd3gubmF2aWdhdGVUbyh7XHJcbiAgICAgICAgdXJsOiAnLi4vcmVnaXN0ZXJYei9yZWdpc3Rlclh6J1xyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gIH0sXHJcblxyXG5cclxuICAvKipcclxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdoumakOiXj1xyXG4gICAqL1xyXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWNuOi9vVxyXG4gICAqL1xyXG4gIG9uVW5sb2FkOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gIH0sXHJcblxyXG59KSJdfQ==
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../service/api.service");
const zxList_1 = require("../../public/json/zxList");
Page({
    data: {
        dataIndex: 0,
        me: '',
        he: '',
        fortuneData: {
            title: '',
            grade: '',
            content: ''
        },
        gradeData: [],
        xzList: zxList_1.default.data,
    },
    onLoad: function (options) {
        let me = options.me;
        let he = options.he;
        this.setData({
            me,
            he,
        });
        this.getConstellationMmatchingDetail(me, he);
    },
    myPick: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            me: zxList_1.default.data[e.detail.value].ch,
        });
    },
    otherPick: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            he: zxList_1.default.data[e.detail.value].ch,
        });
    },
    getConstellationMmatchingDetail(me, he) {
        me = me.replace(/座/, '');
        he = he.replace(/座/, '');
        Api.getConstellationMmatchingDetail(me, he).then((result) => {
            let fortuneData = result.data;
            let gradeData = fortuneData.grade.match(/\★{1,5}/g);
            console.log(gradeData);
            this.setData({
                fortuneData,
                gradeData,
            });
        });
    },
    submit() {
        let { me, he } = this.data;
        this.getConstellationMmatchingDetail(me, he);
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0Y2hYWlJlc3VsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1hdGNoWFpSZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBaUQ7QUFDakQscURBQThDO0FBRTlDLElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLFNBQVMsRUFBRSxDQUFDO1FBQ1osRUFBRSxFQUFFLEVBQUU7UUFDTixFQUFFLEVBQUUsRUFBRTtRQUNOLFdBQVcsRUFBRTtZQUNYLEtBQUssRUFBRSxFQUFFO1lBQ1QsS0FBSyxFQUFFLEVBQUU7WUFDVCxPQUFPLEVBQUUsRUFBRTtTQUNaO1FBQ0QsU0FBUyxFQUFFLEVBQUU7UUFDYixNQUFNLEVBQUUsZ0JBQU0sQ0FBQyxJQUFJO0tBQ3BCO0lBRUQsTUFBTSxFQUFFLFVBQVUsT0FBWTtRQUM1QixJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ3BCLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLEVBQUU7WUFDRixFQUFFO1NBQ0gsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLCtCQUErQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsTUFBTSxFQUFFLFVBQVUsQ0FBTTtRQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDaEQsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLEVBQUUsRUFBRSxnQkFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7U0FDbkMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFNBQVMsRUFBRSxVQUFVLENBQU07UUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ2hELElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixFQUFFLEVBQUUsZ0JBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1NBQ25DLENBQUMsQ0FBQztJQUNMLENBQUM7SUFHRCwrQkFBK0IsQ0FBQyxFQUFVLEVBQUUsRUFBVTtRQUNwRCxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDekIsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pCLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDL0QsSUFBSSxXQUFXLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztZQUM5QixJQUFJLFNBQVMsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxPQUFRLENBQUM7Z0JBQ1osV0FBVztnQkFDWCxTQUFTO2FBQ1YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksRUFDRixFQUFFLEVBQ0YsRUFBRSxFQUNILEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNkLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztDQUVGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFwaSBmcm9tICcuLi8uLi9zZXJ2aWNlL2FwaS5zZXJ2aWNlJztcbmltcG9ydCB4ekxpc3QgZnJvbSAnLi4vLi4vcHVibGljL2pzb24venhMaXN0JztcblxuUGFnZSh7XG4gIGRhdGE6IHtcbiAgICBkYXRhSW5kZXg6IDAsXG4gICAgbWU6ICcnLFxuICAgIGhlOiAnJyxcbiAgICBmb3J0dW5lRGF0YToge1xuICAgICAgdGl0bGU6ICcnLFxuICAgICAgZ3JhZGU6ICcnLFxuICAgICAgY29udGVudDogJydcbiAgICB9LFxuICAgIGdyYWRlRGF0YTogW10sXG4gICAgeHpMaXN0OiB4ekxpc3QuZGF0YSxcbiAgfSxcblxuICBvbkxvYWQ6IGZ1bmN0aW9uIChvcHRpb25zOiBhbnkpIHtcbiAgICBsZXQgbWUgPSBvcHRpb25zLm1lO1xuICAgIGxldCBoZSA9IG9wdGlvbnMuaGU7XG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICBtZSxcbiAgICAgIGhlLFxuICAgIH0pXG4gICAgdGhpcy5nZXRDb25zdGVsbGF0aW9uTW1hdGNoaW5nRGV0YWlsKG1lLCBoZSk7XG4gIH0sXG5cbiAgbXlQaWNrOiBmdW5jdGlvbiAoZTogYW55KSB7XG4gICAgY29uc29sZS5sb2coJ3BpY2tlcuWPkemAgemAieaLqeaUueWPmO+8jOaQuuW4puWAvOS4uicsIGUuZGV0YWlsLnZhbHVlKVxuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgbWU6IHh6TGlzdC5kYXRhW2UuZGV0YWlsLnZhbHVlXS5jaCxcbiAgICB9KTtcbiAgfSxcblxuICBvdGhlclBpY2s6IGZ1bmN0aW9uIChlOiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZygncGlja2Vy5Y+R6YCB6YCJ5oup5pS55Y+Y77yM5pC65bim5YC85Li6JywgZS5kZXRhaWwudmFsdWUpXG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICBoZTogeHpMaXN0LmRhdGFbZS5kZXRhaWwudmFsdWVdLmNoLFxuICAgIH0pO1xuICB9LFxuXG4gIC8qKiDojrflj5bmmJ/luqfor6bop6MgKi9cbiAgZ2V0Q29uc3RlbGxhdGlvbk1tYXRjaGluZ0RldGFpbChtZTogc3RyaW5nLCBoZTogc3RyaW5nKSB7XG4gICAgbWUgPSBtZS5yZXBsYWNlKC/luqcvLCAnJyk7XG4gICAgaGUgPSBoZS5yZXBsYWNlKC/luqcvLCAnJyk7XG4gICAgQXBpLmdldENvbnN0ZWxsYXRpb25NbWF0Y2hpbmdEZXRhaWwobWUsIGhlKS50aGVuKChyZXN1bHQ6IGFueSkgPT4ge1xuICAgICAgbGV0IGZvcnR1bmVEYXRhID0gcmVzdWx0LmRhdGE7XG4gICAgICBsZXQgZ3JhZGVEYXRhID0gZm9ydHVuZURhdGEuZ3JhZGUubWF0Y2goL1xc4piFezEsNX0vZyk7XG4gICAgICBjb25zb2xlLmxvZyhncmFkZURhdGEpO1xuICAgICAgdGhpcy5zZXREYXRhISh7XG4gICAgICAgIGZvcnR1bmVEYXRhLFxuICAgICAgICBncmFkZURhdGEsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcblxuICBzdWJtaXQoKSB7XG4gICAgbGV0IHtcbiAgICAgIG1lLFxuICAgICAgaGVcbiAgICB9ID0gdGhpcy5kYXRhO1xuICAgIHRoaXMuZ2V0Q29uc3RlbGxhdGlvbk1tYXRjaGluZ0RldGFpbChtZSwgaGUpO1xuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouaYvuekulxuICAgKi9cbiAgb25TaG93OiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLpmpDol49cbiAgICovXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Y246L29XG4gICAqL1xuICBvblVubG9hZDogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbn0pIl19
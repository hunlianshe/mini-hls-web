"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../service/api.service");
const zxList_1 = require("../../public/json/zxList");
const app = getApp();
Page({
    data: {
        dataIndex: 0,
        me: '',
        he: '',
        fortuneData: {
            title: '',
            grade: '',
            content: ''
        },
        gradeData: [],
        xzList: zxList_1.default.data,
    },
    onLoad: function (options) {
        let me = options.me;
        let he = options.he;
        this.setData({
            me,
            he,
        });
        this.getConstellationMmatchingDetail(me, he);
    },
    myPick: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            me: zxList_1.default.data[e.detail.value].ch,
        });
    },
    otherPick: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            he: zxList_1.default.data[e.detail.value].ch,
        });
    },
    getConstellationMmatchingDetail(me, he) {
        me = me.replace(/座/, '');
        he = he.replace(/座/, '');
        Api.getConstellationMmatchingDetail(me, he).then((result) => {
            let fortuneData = result.data;
            let gradeData = fortuneData.grade.match(/\★{1,5}/g);
            console.log(gradeData);
            this.setData({
                fortuneData,
                gradeData,
            });
        });
    },
    submit() {
        let { me, he } = this.data;
        this.getConstellationMmatchingDetail(me, he);
    },
    onShow: function () {
    },
    goMatch() {
        let userInfo = app.globalData.userInfo;
        if (userInfo && userInfo.phone) {
            wx.navigateTo({
                url: '../matching/matching'
            });
        }
        else {
            wx.navigateTo({
                url: '../registerXz/registerXz'
            });
        }
    },
    onHide: function () {
    },
    onUnload: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0Y2hYWlJlc3VsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1hdGNoWFpSZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBaUQ7QUFDakQscURBQThDO0FBRTlDLE1BQU0sR0FBRyxHQUFHLE1BQU0sRUFBVSxDQUFDO0FBRTdCLElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLFNBQVMsRUFBRSxDQUFDO1FBQ1osRUFBRSxFQUFFLEVBQUU7UUFDTixFQUFFLEVBQUUsRUFBRTtRQUNOLFdBQVcsRUFBRTtZQUNYLEtBQUssRUFBRSxFQUFFO1lBQ1QsS0FBSyxFQUFFLEVBQUU7WUFDVCxPQUFPLEVBQUUsRUFBRTtTQUNaO1FBQ0QsU0FBUyxFQUFFLEVBQUU7UUFDYixNQUFNLEVBQUUsZ0JBQU0sQ0FBQyxJQUFJO0tBQ3BCO0lBRUQsTUFBTSxFQUFFLFVBQVUsT0FBWTtRQUM1QixJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ3BCLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLEVBQUU7WUFDRixFQUFFO1NBQ0gsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLCtCQUErQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsTUFBTSxFQUFFLFVBQVUsQ0FBTTtRQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDaEQsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLEVBQUUsRUFBRSxnQkFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7U0FDbkMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFNBQVMsRUFBRSxVQUFVLENBQU07UUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ2hELElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixFQUFFLEVBQUUsZ0JBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1NBQ25DLENBQUMsQ0FBQztJQUNMLENBQUM7SUFHRCwrQkFBK0IsQ0FBQyxFQUFVLEVBQUUsRUFBVTtRQUNwRCxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDekIsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pCLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBVyxFQUFFLEVBQUU7WUFDL0QsSUFBSSxXQUFXLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQztZQUM5QixJQUFJLFNBQVMsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxPQUFRLENBQUM7Z0JBQ1osV0FBVztnQkFDWCxTQUFTO2FBQ1YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksRUFDRixFQUFFLEVBQ0YsRUFBRSxFQUNILEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNkLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7UUFDdkMsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRTtZQUM5QixFQUFFLENBQUMsVUFBVSxDQUFDO2dCQUNaLEdBQUcsRUFBRSxzQkFBc0I7YUFDNUIsQ0FBQyxDQUFBO1NBQ0g7YUFBTTtZQUNMLEVBQUUsQ0FBQyxVQUFVLENBQUM7Z0JBQ1osR0FBRyxFQUFFLDBCQUEwQjthQUNoQyxDQUFDLENBQUE7U0FDSDtJQUNILENBQUM7SUFNRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztDQUVGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFwaSBmcm9tICcuLi8uLi9zZXJ2aWNlL2FwaS5zZXJ2aWNlJztcbmltcG9ydCB4ekxpc3QgZnJvbSAnLi4vLi4vcHVibGljL2pzb24venhMaXN0JztcbmltcG9ydCB7IElNeUFwcCB9IGZyb20gJy4uLy4uL2FwcCc7XG5jb25zdCBhcHAgPSBnZXRBcHA8SU15QXBwPigpO1xuXG5QYWdlKHtcbiAgZGF0YToge1xuICAgIGRhdGFJbmRleDogMCxcbiAgICBtZTogJycsXG4gICAgaGU6ICcnLFxuICAgIGZvcnR1bmVEYXRhOiB7XG4gICAgICB0aXRsZTogJycsXG4gICAgICBncmFkZTogJycsXG4gICAgICBjb250ZW50OiAnJ1xuICAgIH0sXG4gICAgZ3JhZGVEYXRhOiBbXSxcbiAgICB4ekxpc3Q6IHh6TGlzdC5kYXRhLFxuICB9LFxuXG4gIG9uTG9hZDogZnVuY3Rpb24gKG9wdGlvbnM6IGFueSkge1xuICAgIGxldCBtZSA9IG9wdGlvbnMubWU7XG4gICAgbGV0IGhlID0gb3B0aW9ucy5oZTtcbiAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgIG1lLFxuICAgICAgaGUsXG4gICAgfSlcbiAgICB0aGlzLmdldENvbnN0ZWxsYXRpb25NbWF0Y2hpbmdEZXRhaWwobWUsIGhlKTtcbiAgfSxcblxuICBteVBpY2s6IGZ1bmN0aW9uIChlOiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZygncGlja2Vy5Y+R6YCB6YCJ5oup5pS55Y+Y77yM5pC65bim5YC85Li6JywgZS5kZXRhaWwudmFsdWUpXG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICBtZTogeHpMaXN0LmRhdGFbZS5kZXRhaWwudmFsdWVdLmNoLFxuICAgIH0pO1xuICB9LFxuXG4gIG90aGVyUGljazogZnVuY3Rpb24gKGU6IGFueSkge1xuICAgIGNvbnNvbGUubG9nKCdwaWNrZXLlj5HpgIHpgInmi6nmlLnlj5jvvIzmkLrluKblgLzkuLonLCBlLmRldGFpbC52YWx1ZSlcbiAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgIGhlOiB4ekxpc3QuZGF0YVtlLmRldGFpbC52YWx1ZV0uY2gsXG4gICAgfSk7XG4gIH0sXG5cbiAgLyoqIOiOt+WPluaYn+W6p+ivpuinoyAqL1xuICBnZXRDb25zdGVsbGF0aW9uTW1hdGNoaW5nRGV0YWlsKG1lOiBzdHJpbmcsIGhlOiBzdHJpbmcpIHtcbiAgICBtZSA9IG1lLnJlcGxhY2UoL+W6py8sICcnKTtcbiAgICBoZSA9IGhlLnJlcGxhY2UoL+W6py8sICcnKTtcbiAgICBBcGkuZ2V0Q29uc3RlbGxhdGlvbk1tYXRjaGluZ0RldGFpbChtZSwgaGUpLnRoZW4oKHJlc3VsdDogYW55KSA9PiB7XG4gICAgICBsZXQgZm9ydHVuZURhdGEgPSByZXN1bHQuZGF0YTtcbiAgICAgIGxldCBncmFkZURhdGEgPSBmb3J0dW5lRGF0YS5ncmFkZS5tYXRjaCgvXFzimIV7MSw1fS9nKTtcbiAgICAgIGNvbnNvbGUubG9nKGdyYWRlRGF0YSk7XG4gICAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgICAgZm9ydHVuZURhdGEsXG4gICAgICAgIGdyYWRlRGF0YSxcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9LFxuXG4gIHN1Ym1pdCgpIHtcbiAgICBsZXQge1xuICAgICAgbWUsXG4gICAgICBoZVxuICAgIH0gPSB0aGlzLmRhdGE7XG4gICAgdGhpcy5nZXRDb25zdGVsbGF0aW9uTW1hdGNoaW5nRGV0YWlsKG1lLCBoZSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5pi+56S6XG4gICAqL1xuICBvblNob3c6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIGdvTWF0Y2goKSB7XG4gICAgbGV0IHVzZXJJbmZvID0gYXBwLmdsb2JhbERhdGEudXNlckluZm87XG4gICAgaWYgKHVzZXJJbmZvICYmIHVzZXJJbmZvLnBob25lKSB7XG4gICAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgdXJsOiAnLi4vbWF0Y2hpbmcvbWF0Y2hpbmcnXG4gICAgICB9KVxuICAgIH0gZWxzZSB7XG4gICAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgdXJsOiAnLi4vcmVnaXN0ZXJYei9yZWdpc3Rlclh6J1xuICAgICAgfSlcbiAgICB9XG4gIH0sXG5cblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLpmpDol49cbiAgICovXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Y246L29XG4gICAqL1xuICBvblVubG9hZDogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbn0pIl19
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../service/api.service");
const zxList_1 = require("../../public/json/zxList");
const app = getApp();
Page({
    data: {
        dataIndex: 0,
        me: '',
        he: '',
        fortuneData: {
            title: '',
            grade: '',
            content: ''
        },
        gradeData: [],
        xzList: zxList_1.default.data,
    },
    onLoad: function (options) {
        let me = options.me;
        let he = options.he;
        this.setData({
            me,
            he,
        });
        this.getConstellationMmatchingDetail(me, he);
    },
    myPick: function (e) {
        this.setData({
            me: zxList_1.default.data[e.detail.value].ch,
        });
    },
    otherPick: function (e) {
        this.setData({
            he: zxList_1.default.data[e.detail.value].ch,
        });
    },
    onShareAppMessage: function () {
        return {
            title: '星座匹配',
            desc: `${this.data.me} VS ${this.data.he} 缘分指数`,
            path: `/pages/matchXZResult/matchXZResult?me=${this.data.me}&he=${this.data.he}`,
        };
    },
    getConstellationMmatchingDetail(me, he) {
        me = me.replace(/座/, '');
        he = he.replace(/座/, '');
        Api.getConstellationMmatchingDetail(me, he).then((result) => {
            let fortuneData = result.data;
            let gradeData = fortuneData.grade.match(/\★{1,5}/g);
            this.setData({
                fortuneData,
                gradeData,
            });
        });
    },
    submit() {
        let { me, he } = this.data;
        this.getConstellationMmatchingDetail(me, he);
    },
    onShow: function () {
    },
    goMatch() {
        let userInfo = app.globalData.userInfo;
        if (userInfo && userInfo.phone) {
            wx.navigateTo({
                url: '../matching/matching'
            });
        }
        else {
            wx.navigateTo({
                url: '../registerXz/registerXz'
            });
        }
    },
    onHide: function () {
    },
    onUnload: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0Y2hYWlJlc3VsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1hdGNoWFpSZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBaUQ7QUFDakQscURBQThDO0FBRTlDLE1BQU0sR0FBRyxHQUFHLE1BQU0sRUFBVSxDQUFDO0FBRTdCLElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLFNBQVMsRUFBRSxDQUFDO1FBQ1osRUFBRSxFQUFFLEVBQUU7UUFDTixFQUFFLEVBQUUsRUFBRTtRQUNOLFdBQVcsRUFBRTtZQUNYLEtBQUssRUFBRSxFQUFFO1lBQ1QsS0FBSyxFQUFFLEVBQUU7WUFDVCxPQUFPLEVBQUUsRUFBRTtTQUNaO1FBQ0QsU0FBUyxFQUFFLEVBQUU7UUFDYixNQUFNLEVBQUUsZ0JBQU0sQ0FBQyxJQUFJO0tBQ3BCO0lBRUQsTUFBTSxFQUFFLFVBQVUsT0FBWTtRQUM1QixJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ3BCLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQVEsQ0FBQztZQUNaLEVBQUU7WUFDRixFQUFFO1NBQ0gsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLCtCQUErQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsTUFBTSxFQUFFLFVBQVUsQ0FBTTtRQUN0QixJQUFJLENBQUMsT0FBUSxDQUFDO1lBQ1osRUFBRSxFQUFFLGdCQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtTQUNuQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsU0FBUyxFQUFFLFVBQVUsQ0FBTTtRQUN6QixJQUFJLENBQUMsT0FBUSxDQUFDO1lBQ1osRUFBRSxFQUFFLGdCQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtTQUNuQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0QsaUJBQWlCLEVBQUU7UUFDakIsT0FBTztZQUNMLEtBQUssRUFBRSxNQUFNO1lBQ2IsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU87WUFDL0MsSUFBSSxFQUFFLHlDQUF5QyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRTtTQUNqRixDQUFBO0lBQ0gsQ0FBQztJQUVELCtCQUErQixDQUFDLEVBQVUsRUFBRSxFQUFVO1FBQ3BELEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN6QixFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDekIsR0FBRyxDQUFDLCtCQUErQixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFXLEVBQUUsRUFBRTtZQUMvRCxJQUFJLFdBQVcsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQzlCLElBQUksU0FBUyxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxPQUFRLENBQUM7Z0JBQ1osV0FBVztnQkFDWCxTQUFTO2FBQ1YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksRUFDRixFQUFFLEVBQ0YsRUFBRSxFQUNILEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNkLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7UUFDdkMsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRTtZQUM5QixFQUFFLENBQUMsVUFBVSxDQUFDO2dCQUNaLEdBQUcsRUFBRSxzQkFBc0I7YUFDNUIsQ0FBQyxDQUFBO1NBQ0g7YUFBTTtZQUNMLEVBQUUsQ0FBQyxVQUFVLENBQUM7Z0JBQ1osR0FBRyxFQUFFLDBCQUEwQjthQUNoQyxDQUFDLENBQUE7U0FDSDtJQUNILENBQUM7SUFNRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztDQUVGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEFwaSBmcm9tICcuLi8uLi9zZXJ2aWNlL2FwaS5zZXJ2aWNlJztcbmltcG9ydCB4ekxpc3QgZnJvbSAnLi4vLi4vcHVibGljL2pzb24venhMaXN0JztcbmltcG9ydCB7IElNeUFwcCB9IGZyb20gJy4uLy4uL2FwcCc7XG5jb25zdCBhcHAgPSBnZXRBcHA8SU15QXBwPigpO1xuXG5QYWdlKHtcbiAgZGF0YToge1xuICAgIGRhdGFJbmRleDogMCxcbiAgICBtZTogJycsXG4gICAgaGU6ICcnLFxuICAgIGZvcnR1bmVEYXRhOiB7XG4gICAgICB0aXRsZTogJycsXG4gICAgICBncmFkZTogJycsXG4gICAgICBjb250ZW50OiAnJ1xuICAgIH0sXG4gICAgZ3JhZGVEYXRhOiBbXSxcbiAgICB4ekxpc3Q6IHh6TGlzdC5kYXRhLFxuICB9LFxuXG4gIG9uTG9hZDogZnVuY3Rpb24gKG9wdGlvbnM6IGFueSkge1xuICAgIGxldCBtZSA9IG9wdGlvbnMubWU7XG4gICAgbGV0IGhlID0gb3B0aW9ucy5oZTtcbiAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgIG1lLFxuICAgICAgaGUsXG4gICAgfSlcbiAgICB0aGlzLmdldENvbnN0ZWxsYXRpb25NbWF0Y2hpbmdEZXRhaWwobWUsIGhlKTtcbiAgfSxcblxuICBteVBpY2s6IGZ1bmN0aW9uIChlOiBhbnkpIHtcbiAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgIG1lOiB4ekxpc3QuZGF0YVtlLmRldGFpbC52YWx1ZV0uY2gsXG4gICAgfSk7XG4gIH0sXG5cbiAgb3RoZXJQaWNrOiBmdW5jdGlvbiAoZTogYW55KSB7XG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICBoZTogeHpMaXN0LmRhdGFbZS5kZXRhaWwudmFsdWVdLmNoLFxuICAgIH0pO1xuICB9LFxuICBvblNoYXJlQXBwTWVzc2FnZTogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0aXRsZTogJ+aYn+W6p+WMuemFjScsXG4gICAgICBkZXNjOiBgJHt0aGlzLmRhdGEubWV9IFZTICR7dGhpcy5kYXRhLmhlfSDnvJjliIbmjIfmlbBgLFxuICAgICAgcGF0aDogYC9wYWdlcy9tYXRjaFhaUmVzdWx0L21hdGNoWFpSZXN1bHQ/bWU9JHt0aGlzLmRhdGEubWV9JmhlPSR7dGhpcy5kYXRhLmhlfWAsXG4gICAgfVxuICB9LFxuICAvKiog6I635Y+W5pif5bqn6K+m6KejICovXG4gIGdldENvbnN0ZWxsYXRpb25NbWF0Y2hpbmdEZXRhaWwobWU6IHN0cmluZywgaGU6IHN0cmluZykge1xuICAgIG1lID0gbWUucmVwbGFjZSgv5bqnLywgJycpO1xuICAgIGhlID0gaGUucmVwbGFjZSgv5bqnLywgJycpO1xuICAgIEFwaS5nZXRDb25zdGVsbGF0aW9uTW1hdGNoaW5nRGV0YWlsKG1lLCBoZSkudGhlbigocmVzdWx0OiBhbnkpID0+IHtcbiAgICAgIGxldCBmb3J0dW5lRGF0YSA9IHJlc3VsdC5kYXRhO1xuICAgICAgbGV0IGdyYWRlRGF0YSA9IGZvcnR1bmVEYXRhLmdyYWRlLm1hdGNoKC9cXOKYhXsxLDV9L2cpO1xuICAgICAgdGhpcy5zZXREYXRhISh7XG4gICAgICAgIGZvcnR1bmVEYXRhLFxuICAgICAgICBncmFkZURhdGEsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcblxuICBzdWJtaXQoKSB7XG4gICAgbGV0IHtcbiAgICAgIG1lLFxuICAgICAgaGVcbiAgICB9ID0gdGhpcy5kYXRhO1xuICAgIHRoaXMuZ2V0Q29uc3RlbGxhdGlvbk1tYXRjaGluZ0RldGFpbChtZSwgaGUpO1xuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouaYvuekulxuICAgKi9cbiAgb25TaG93OiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICBnb01hdGNoKCkge1xuICAgIGxldCB1c2VySW5mbyA9IGFwcC5nbG9iYWxEYXRhLnVzZXJJbmZvO1xuICAgIGlmICh1c2VySW5mbyAmJiB1c2VySW5mby5waG9uZSkge1xuICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgIHVybDogJy4uL21hdGNoaW5nL21hdGNoaW5nJ1xuICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgIHVybDogJy4uL3JlZ2lzdGVyWHovcmVnaXN0ZXJYeidcbiAgICAgIH0pXG4gICAgfVxuICB9LFxuXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i6ZqQ6JePXG4gICAqL1xuICBvbkhpZGU6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWNuOi9vVxuICAgKi9cbiAgb25VbmxvYWQ6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG59KSJdfQ==
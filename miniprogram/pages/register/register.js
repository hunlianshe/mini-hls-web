"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../service/api.service");
const utils = require("../../utils/utils");
Page({
    data: {
        user: { openid: '' },
        nickName: '',
        gender: '',
        birth: '',
        height: '',
        salary: '',
        region: [],
        isMarriage: '未婚',
        education: '',
        hasChild: '',
        wantChild: '',
        jobGeneral: '',
        haveHouse: '',
        genderIndex: 0,
        salaryIndex: 0,
        dateNow: '',
        submitDisable: false,
        isMarriageArray: ['未婚', '离异'],
        genderArray: ['男', '女'],
        salaryArray: [
            '5千以下', '5千～1万', '1万～2万', '2万～5万', '5万以上'
        ],
        educationArray: [
            '小学', '初中', '高中', '大专', '大学本科', '硕士', '博士'
        ],
        hasChildArray: ['是', '否'],
        wantChildArray: ['是', '否'],
        haveHouseArray: ['已买', '未买'],
    },
    onLoad: function () {
        let _this = this;
        wx.getStorage({
            key: 'user',
            success: function (res) {
                _this.setData({
                    user: res.data
                });
            },
        });
        this.setData({
            dateNow: this.getYMD(new Date())
        });
    },
    getCarDetail(id) {
        Api.getUserDetail(id).then((result) => {
            if (result) {
                this.setData({
                    branickNamend: result.data.nickName,
                    gender: result.data.gender,
                    birth: this.getYMD(result.data.birth),
                    height: result.data.height,
                    salary: result.data.salary,
                    workProvince: result.data.region[0],
                    workCity: result.data.region[1],
                    workRegion: result.data.region[2],
                    isMarriage: result.data.isMarriage,
                    education: result.data.education,
                    hasChild: result.data.hasChild,
                    wantChild: result.data.wantChild,
                    jobGeneral: result.data.jobGeneral,
                    jobDetail: result.data.jobDetail,
                    haveHouse: result.data.haveHouse,
                });
            }
        });
    },
    getYMD(dateStr) {
        const date = new Date(dateStr);
        const year = date.getFullYear();
        let month = date.getMonth() + 1;
        let monthStr = month <= 9 ? `0${month}` : month;
        let day = date.getDate();
        let dayStr = day <= 9 ? `0${day}` : day;
        return `${year}-${monthStr}-${dayStr}`;
    },
    onSubmit(e) {
        let that = this;
        const value = e.detail.value;
        if (!utils.validateEmpty(value.nickName, '请输入昵称') ||
            !utils.validateEmpty(value.gender, '请选择性别') ||
            !utils.validateEmpty(value.birth, '请选择生日') ||
            !utils.validateEmpty(value.height, '请输入身高') ||
            !utils.validateEmpty(value.salary, '请选择收入') ||
            !utils.validateEmpty(this.data.region[0], '请选择工作所在地') ||
            !utils.validateEmpty(this.data.education, '请选择学历') ||
            !utils.validateEmpty(this.data.isMarriage, '请选择婚姻状况') ||
            !utils.validateEmpty(this.data.hasChild, '请选择是否有孩子') ||
            !utils.validateEmpty(this.data.wantChild, '请选择是否想要孩子') ||
            !utils.validateEmpty(this.data.jobGeneral, '请选择职业') ||
            !utils.validateEmpty(this.data.haveHouse, '请选择买房情况')) {
            return false;
        }
        that.doSubmit(e);
    },
    doSubmit(e) {
        const params = e.detail.value;
        this.setData({
            submitDisable: true
        });
        Api.updateUser(Object.assign(params)).then((result) => {
            wx.hideLoading();
            this.setData({
                submitDisable: true
            });
            if (result.code === 200) {
                wx.navigateTo({
                    url: `../home/home`,
                });
            }
            else if (result.code === 1202) {
                utils.showModal('信息校验不通过，请核对汽车信息');
            }
            else {
                utils.showModal();
            }
        });
    },
    bindBirthChange(e) {
        this.setData({
            birth: e.detail.value
        });
    },
    bindEducationChange(e) {
        const { educationArray } = this.data;
        this.setData({
            education: educationArray[e.detail.value]
        });
    },
    bindMarriageChange(e) {
        const { isMarriageArray } = this.data;
        this.setData({
            isMarriage: isMarriageArray[e.detail.value]
        });
    },
    bindHasChildChange(e) {
        const { hasChildArray } = this.data;
        this.setData({
            hasChild: hasChildArray[e.detail.value]
        });
    },
    bindWantChildChange(e) {
        const { wantChildArray } = this.data;
        this.setData({
            wantChild: wantChildArray[e.detail.value]
        });
    },
    bindHaveHouseChange(e) {
        const { haveHouseArray } = this.data;
        this.setData({
            haveHouse: haveHouseArray[e.detail.value]
        });
    },
    bindGenderChange(e) {
        const { genderArray } = this.data;
        this.setData({
            gender: genderArray[e.detail.value]
        });
    },
    bindSalaryChange(e) {
        const { salaryArray } = this.data;
        this.setData({
            salary: salaryArray[e.detail.value]
        });
    },
    bindRegionChange: function (e) {
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            region: e.detail.value,
        });
    },
});
//# sourceMappingURL=data:application/json;base64,
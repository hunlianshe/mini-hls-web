"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const apiServicePro = require("../../service/api.service");
const oss_1 = require("../../utils/oss");
const config_1 = require("../../config");
const utils = require("../../utils/utils");
Page({
    data: {
        user: { openid: '' },
        carId: '',
        shopId: '',
        brand: '',
        brandDetail: '',
        price: '',
        birthday: '',
        height: '',
        transfersNumber: '',
        isMarriage: '未婚',
        sex: '',
        education: '',
        hasChild: '',
        wantChild: '',
        job: '',
        house: '',
        sexIndex: 0,
        note: '',
        leftLenth: 300,
        indexImage: '',
        uploadIndexPath: '',
        oldImages: [],
        uploadImgs: [],
        count: 9,
        city: '',
        selectValue: '',
        cityList: [],
        hotCityList: [],
        popHidden: true,
        brandList: [],
        hotBrandList: [],
        dateNow: '',
        popHiddenBrand: true,
        submitDisable: false,
        isMarriageArray: ['未婚', '离异'],
        sexArray: ['男', '女'],
        salaryArray: [
            '5千以下', '5千～1万', '1万～2万', '2万～5万', '5万以上'
        ],
        educationArray: [
            '小学', '初中', '高中', '大专', '大学本科', '硕士', '博士'
        ],
        hasChildArray: ['是', '否'],
        wantChildArray: ['是', '否'],
        houseArray: ['已买', '未买'],
    },
    onLoad: function (options) {
        let _this = this;
        wx.getStorage({
            key: 'user',
            success: function (res) {
                _this.setData({
                    user: res.data
                });
            },
        });
        if (options.carId) {
            _this.getCarDetail(options.carId);
        }
        _this.setData({
            shopId: options.shopId,
            carId: options.carId || ''
        });
        this.setData({
            dateNow: this.getYMD(new Date())
        });
    },
    getCarDetail(id) {
        apiServicePro.getUserDetail(id).then((result) => {
            if (result) {
                this.setData({
                    brand: result.data.brand,
                    brandDetail: result.data.brandDetail,
                    city: result.data.city,
                    price: result.data.price,
                    birthday: this.getYMD(result.data.birthday),
                    height: result.data.height,
                    transfersNumber: result.data.transfersNumber,
                    isMarriage: result.data.isMarriage,
                    education: result.data.education,
                    sex: result.data.sex,
                    note: result.data.note,
                    indexImage: result.data.indexImage,
                    oldImages: result.data.images,
                });
            }
        });
    },
    getYMD(dateStr) {
        const date = new Date(dateStr);
        const year = date.getFullYear();
        let month = date.getMonth() + 1;
        let monthStr = month <= 9 ? `0${month}` : month;
        let day = date.getDate();
        let dayStr = day <= 9 ? `0${day}` : day;
        return `${year}-${monthStr}-${dayStr}`;
    },
    onSubmit(e) {
        let that = this;
        const value = e.detail.value;
        const openid = this.data.user.openid;
        const aliyunServerURL = config_1.default.uploadImageUrl;
        if (!utils.validateEmpty(value.brand, '请选择品牌车系') ||
            !utils.validateEmpty(value.birthday, '请选择上牌日期') ||
            !utils.validateEmpty(value.height, '请输入行驶里程') ||
            !utils.validateEmpty(value.city, '请输选择牌照所在地') ||
            !utils.validateEmpty(value.price, '请输入价格') ||
            !utils.validateEmpty(value.transfersNumber, '请输入过户次数') ||
            !utils.validateEmpty(value.sex, '请选择车况') ||
            !utils.validateEmpty(this.data.indexImage, '请上传汽车首页照片') ||
            !utils.validateImages(this.data.oldImages.concat(this.data.uploadImgs), '请上传汽车照片')) {
            return false;
        }
        let indexImage = this.data.indexImage;
        let uploadIndexPath = this.data.uploadIndexPath;
        if (uploadIndexPath !== '') {
            oss_1.default({
                filePath: indexImage,
                dir: `images/shop/${openid}/` + indexImage.replace('http://tmp/', ''),
                success: function (res) {
                    indexImage = `${aliyunServerURL}/${res}`;
                    that.uploadAndSubmit(e, indexImage);
                },
                fail: function () {
                    that.uploadAndSubmit(e, indexImage);
                }
            });
        }
        else {
            that.uploadAndSubmit(e, indexImage);
        }
    },
    uploadAndSubmit(e, indexImage) {
        const openid = this.data.user.openid;
        const aliyunServerURL = config_1.default.uploadImageUrl;
        let that = this;
        let count = 0;
        let images = [];
        const uploadImgs = this.data.uploadImgs;
        wx.showLoading({
            title: '',
        });
        if (uploadImgs.length > 0) {
            for (let i = 0; i < uploadImgs.length; i++) {
                let filePath = uploadImgs[i];
                oss_1.default({
                    filePath: filePath,
                    dir: `images/shop/${openid}/` + filePath.replace('http://tmp/', ''),
                    success: function (res) {
                        count++;
                        images.push(`${aliyunServerURL}/${res}`);
                        if (count === uploadImgs.length) {
                            if (that.data.carId !== '') {
                                images = images.concat(that.data.oldImages);
                                that.updateCar(e, indexImage, images, that.data.carId);
                            }
                            else {
                                that.doSubmit(e, indexImage, images);
                            }
                        }
                        else {
                        }
                    },
                    fail: function () {
                        wx.hideLoading();
                    }
                });
            }
        }
        else {
            if (that.data.carId !== '') {
                images = images.concat(that.data.oldImages);
                that.updateCar(e, indexImage, images, that.data.carId);
            }
            else {
                that.doSubmit(e, indexImage, images);
            }
            wx.hideLoading();
        }
    },
    doSubmit(e, indexImage, images) {
        const params = e.detail.value;
        this.setData({
            submitDisable: true
        });
        apiServicePro.register(Object.assign({ images, indexImage }, params)).then((result) => {
            wx.hideLoading();
            this.setData({
                submitDisable: true
            });
            if (result.code === 200) {
                wx.navigateTo({
                    url: `../carDetail/carDetail?id=${result.data.id}&from=creatCarPage`,
                });
            }
            else if (result.code === 1202) {
                utils.showModal('信息校验不通过，请核对汽车信息');
            }
            else {
                utils.showModal();
            }
        });
    },
    updateCar(e, indexImage, images, carId) {
        const value = e.detail.value;
        const params = Object.assign(value, { 'id': carId });
        this.setData({
            submitDisable: true
        });
        apiServicePro.updateUser(Object.assign({ images, indexImage }, params)).then((result) => {
            wx.hideLoading();
            this.setData({
                submitDisable: true
            });
            if (result.code === 200) {
                wx.navigateTo({
                    url: `../carDetail/carDetail?id=${result.data.id}&from=creatCarPage`,
                });
            }
            else if (result.code === 1202) {
                utils.showModal('信息校验不通过，请核对汽车信息');
            }
            else {
                utils.showModal();
            }
        });
    },
    delImage(e) {
        const array = e.currentTarget.dataset.array;
        const index = e.currentTarget.dataset.index;
        if (array === 'oldImages') {
            const oldImages = this.data.oldImages;
            oldImages.splice(index, 1);
            this.setData({
                oldImages
            });
        }
        else {
            const uploadImgs = this.data.uploadImgs;
            uploadImgs.splice(index, 1);
            this.setData({
                uploadImgs
            });
        }
    },
    chooseIndexImage() {
        this.chooseImage(1, 'one');
    },
    chooseOtherImage(e) {
        const selectPictureNum = e.target.dataset.num;
        let count = 99 - selectPictureNum;
        this.chooseImage(count, 'multi');
    },
    chooseImage(count, type) {
        const that = this;
        wx.chooseImage({
            count: count,
            sizeType: ['original', 'compressed'],
            sourceType: ['album', 'camera'],
            success: function (res) {
                let uploadImgs = that.data.uploadImgs;
                if (type === 'multi') {
                    that.setData({
                        uploadImgs: uploadImgs.concat(res.tempFilePaths),
                    });
                }
                else {
                    that.setData({
                        uploadIndexPath: res.tempFilePaths[0],
                        indexImage: res.tempFilePaths[0],
                    });
                }
            },
        });
    },
    popPicker() {
        let popHidden = this.data.popHidden;
        this.setData({
            popHidden: !popHidden,
        });
    },
    doSelect(e) {
        if (e.detail.name) {
            this.setData({
                popHidden: true,
                city: e.detail.name,
            });
            wx.setStorage({
                key: 'city',
                data: e.detail.name,
            });
        }
        else {
            this.setData({
                popHidden: true,
            });
        }
    },
    popBrand() {
        let popHiddenBrand = this.data.popHiddenBrand;
        this.setData({
            popHiddenBrand: !popHiddenBrand,
        });
    },
    doSelectBrand(e) {
        if (e.detail.brand) {
            this.setData({
                popHiddenBrand: true,
                brand: e.detail.brand,
                brandDetail: e.detail.brandDetail,
            });
            wx.setStorage({
                key: 'brand',
                data: e.detail.brand,
            });
        }
        else {
            this.setData({
                popHiddenBrand: true,
            });
        }
    },
    bindDateChange(e) {
        this.setData({
            birthday: e.detail.value
        });
    },
    bindEducationChange(e) {
        const { educationArray } = this.data;
        this.setData({
            education: educationArray[e.detail.value]
        });
    },
    bindMarriageChange(e) {
        const { isMarriageArray } = this.data;
        this.setData({
            isMarriage: isMarriageArray[e.detail.value]
        });
    },
    bindHasChildChange(e) {
        const { hasChildArray } = this.data;
        this.setData({
            hasChild: hasChildArray[e.detail.value]
        });
    },
    bindWantChildChange(e) {
        const { wantChildArray } = this.data;
        this.setData({
            hasChild: wantChildArray[e.detail.value]
        });
    },
    bindHouseChange(e) {
        const { houseArray } = this.data;
        this.setData({
            house: houseArray[e.detail.value]
        });
    },
    bindSexChange(e) {
        const { sexArray } = this.data;
        this.setData({
            sex: sexArray[e.detail.value]
        });
    },
    bindSalaryChange(e) {
        const { salaryArray } = this.data;
        this.setData({
            salary: salaryArray[e.detail.value]
        });
    },
    inputNote(e) {
        const leftLenth = (300 - e.detail.value.length);
        this.setData({
            leftLenth: leftLenth > 0 ? leftLenth : 0
        });
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,
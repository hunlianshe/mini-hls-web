"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../service/api.service");
const zxList_1 = require("../../public/json/zxList");
const dataList = [];
zxList_1.default.data.forEach((e) => {
    dataList.push(e.ch);
});
Page({
    data: {
        dataIndex: 0,
        fortuneName: '',
        fortuneData: {},
        xzList: dataList,
    },
    onLoad: function (options) {
        console.log('options', options);
        this.setData({
            fortuneName: options.consName,
        });
        this.getFortune(options.consName, options.type);
    },
    otherPick: function (e) {
        console.log('---->');
        console.log('picker发送选择改变，携带值为', e.detail.value);
        this.setData({
            fortuneName: dataList[e.detail.value],
        });
        this.getFortune(this.data.fortuneName);
    },
    getFortune(consNamem, type = 'month') {
        Api.getHoroscopet(consNamem, type).then((result) => {
            console.log('result.data', result.data);
            let fortuneData = result.data;
            fortuneData.summary = fortuneData.summary || result.data.love;
            this.setData({
                fortuneData,
            });
        });
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhbFh6eXNEZXRhaWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZWFsWHp5c0RldGFpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUFpRDtBQUNqRCxxREFBOEM7QUFFOUMsTUFBTSxRQUFRLEdBQVUsRUFBRSxDQUFDO0FBQzNCLGdCQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQU0sRUFBRSxFQUFFO0lBQzdCLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3RCLENBQUMsQ0FBQyxDQUFDO0FBR0gsSUFBSSxDQUFDO0lBQ0gsSUFBSSxFQUFFO1FBQ0osU0FBUyxFQUFFLENBQUM7UUFDWixXQUFXLEVBQUUsRUFBRTtRQUNmLFdBQVcsRUFBRSxFQUFFO1FBQ2YsTUFBTSxFQUFFLFFBQVE7S0FFakI7SUFFRCxNQUFNLEVBQUUsVUFBVSxPQUFZO1FBQzVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQzlCLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixXQUFXLEVBQUUsT0FBTyxDQUFDLFFBQVE7U0FDOUIsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUNoRCxDQUFDO0lBRUQsU0FBUyxFQUFFLFVBQVUsQ0FBTTtRQUN6QixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUNoRCxJQUFJLENBQUMsT0FBUSxDQUFDO1lBQ1osV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztTQUN0QyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUdELFVBQVUsQ0FBQyxTQUFpQixFQUFDLElBQUksR0FBQyxPQUFPO1FBQ3ZDLEdBQUcsQ0FBQyxhQUFhLENBQUMsU0FBUyxFQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQVcsRUFBRSxFQUFFO1lBQ3JELE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUN2QyxJQUFJLFdBQVcsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQzlCLFdBQVcsQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDLE9BQU8sSUFBSyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQTtZQUM5RCxJQUFJLENBQUMsT0FBUSxDQUFDO2dCQUNaLFdBQVc7YUFDWixDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxPQUFPLEVBQUU7SUFFVCxDQUFDO0lBS0QsTUFBTSxFQUFFO0lBRVIsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxRQUFRLEVBQUU7SUFFVixDQUFDO0NBRUYsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQXBpIGZyb20gJy4uLy4uL3NlcnZpY2UvYXBpLnNlcnZpY2UnO1xuaW1wb3J0IHh6TGlzdCBmcm9tICcuLi8uLi9wdWJsaWMvanNvbi96eExpc3QnO1xuXG5jb25zdCBkYXRhTGlzdDogYW55W10gPSBbXTtcbnh6TGlzdC5kYXRhLmZvckVhY2goKGU6IGFueSkgPT4ge1xuICBkYXRhTGlzdC5wdXNoKGUuY2gpO1xufSk7XG5cblxuUGFnZSh7XG4gIGRhdGE6IHtcbiAgICBkYXRhSW5kZXg6IDAsXG4gICAgZm9ydHVuZU5hbWU6ICcnLFxuICAgIGZvcnR1bmVEYXRhOiB7fSxcbiAgICB4ekxpc3Q6IGRhdGFMaXN0LFxuXG4gIH0sXG5cbiAgb25Mb2FkOiBmdW5jdGlvbiAob3B0aW9uczogYW55KSB7XG4gICAgY29uc29sZS5sb2coJ29wdGlvbnMnLG9wdGlvbnMpXG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICBmb3J0dW5lTmFtZTogb3B0aW9ucy5jb25zTmFtZSxcbiAgICB9KTtcbiAgICB0aGlzLmdldEZvcnR1bmUob3B0aW9ucy5jb25zTmFtZSxvcHRpb25zLnR5cGUpIFxuICB9LFxuXG4gIG90aGVyUGljazogZnVuY3Rpb24gKGU6IGFueSkge1xuICAgIGNvbnNvbGUubG9nKCctLS0tPicpXG4gICAgY29uc29sZS5sb2coJ3BpY2tlcuWPkemAgemAieaLqeaUueWPmO+8jOaQuuW4puWAvOS4uicsIGUuZGV0YWlsLnZhbHVlKVxuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgZm9ydHVuZU5hbWU6IGRhdGFMaXN0W2UuZGV0YWlsLnZhbHVlXSxcbiAgICB9KTtcbiAgICB0aGlzLmdldEZvcnR1bmUodGhpcy5kYXRhLmZvcnR1bmVOYW1lKTtcbiAgfSxcblxuICAvKiog6I635Y+W5a6e5pe25pif5bqn6L+Q5Yq/ICovXG4gIGdldEZvcnR1bmUoY29uc05hbWVtOiBzdHJpbmcsdHlwZT0nbW9udGgnKSB7XG4gICAgQXBpLmdldEhvcm9zY29wZXQoY29uc05hbWVtLHR5cGUpLnRoZW4oKHJlc3VsdDogYW55KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygncmVzdWx0LmRhdGEnLCByZXN1bHQuZGF0YSlcbiAgICAgIGxldCBmb3J0dW5lRGF0YSA9IHJlc3VsdC5kYXRhO1xuICAgICAgZm9ydHVuZURhdGEuc3VtbWFyeSA9IGZvcnR1bmVEYXRhLnN1bW1hcnkgfHwgIHJlc3VsdC5kYXRhLmxvdmVcbiAgICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgICBmb3J0dW5lRGF0YSxcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9LFxuXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouaYvuekulxuICAgKi9cbiAgb25TaG93OiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLpmpDol49cbiAgICovXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Y246L29XG4gICAqL1xuICBvblVubG9hZDogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbn0pIl19
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Api = require("../../service/api.service");
const app = getApp();
Page({
    data: {
        userInfo: { constellation: '' },
        psyTest: [],
        currShopList: [],
        dataAlready: false,
        currentCity: '',
        selectValue: '',
        currentQrcode: '',
        currentPhone: '',
        phone: '',
        popHidden: true,
        pageLoaded: false,
        popWechat: false,
        currentPage: 1,
        pageSize: 10,
        totalCount: 0,
        pullDown: false,
        pullUp: false,
        horoscopeData: {},
    },
    onLoad() {
        let _this = this;
        wx.getStorage({
            key: 'user',
            success: function (res) {
                _this.setData({
                    userInfo: res.data,
                });
                _this.getUserInfo();
                _this.getPsyList();
            },
        });
        this.getRightConfig();
    },
    getRightConfig() {
        const rightConfig = [
            {
                name: '无会员',
                horoscope: 99999,
                yearPrice: 0,
                seasonPrice: 0,
                monthPrice: 0,
                psychologicalTest: 99999,
                constellationMatching: 99999,
                fateMatch: 3,
                fateWatch: 20,
                fateChat: 3,
                whoLikeMe: 0,
                likeEach: 0,
            },
            {
                name: '黄铜会员',
                yearPrice: 120,
                seasonPrice: 30,
                monthPrice: 10,
                horoscope: 99999,
                psychologicalTest: 99999,
                constellationMatching: 99999,
                fateMatch: 99999,
                fateWatch: 99999,
                fateChat: 20,
                whoLikeMe: 99999,
                likeEach: 99999,
            },
            {
                name: '白金会员',
                yearPrice: 240,
                seasonPrice: 60,
                monthPrice: 20,
                horoscope: 99999,
                psychologicalTest: 99999,
                constellationMatching: 99999,
                fateMatch: 99999,
                fateWatch: 99999,
                fateChat: 9999,
                whoLikeMe: 99999,
                likeEach: 99999,
            },
        ];
        wx.setStorage({ key: 'rightConfig', data: rightConfig });
    },
    goXzys() {
        wx.navigateTo({
            url: `../xzys/xzys`,
        });
    },
    goXlcsList() {
        wx.navigateTo({
            url: `../xlcsList/xlcsList`,
        });
    },
    doTest(e) {
        const { id, type, } = e.currentTarget.dataset;
        if (type === '3') {
            wx.navigateTo({
                url: `../qsqy/qsqy?id=${id}`,
            });
        }
        else {
            wx.navigateTo({
                url: `../xlcsDetail/xlcsDetail?id=${id}`,
            });
        }
    },
    goMatch() {
        wx.navigateTo({
            url: `../matcheXz/matcheXz`,
        });
    },
    getPsyList() {
        Api.getPsyList().then((result) => {
            this.setData({
                psyTest: result.data,
            });
        });
    },
    getHoroscopet(e) {
        const consName = this.data.userInfo.constellation ? this.data.userInfo.constellation : '白羊座';
        const { type } = e.currentTarget.dataset;
        wx.navigateTo({
            url: '../realXzysDetail/realXzysDetail?consName=' + consName + '&type=' + type
        });
    },
    getUserInfo() {
        const { openid } = this.data.userInfo;
        Api.getUserInfo(openid || '').then((result) => {
            if (result) {
                const userInfo = result.data;
                app.globalData.userInfo = result.data;
                wx.setStorage({
                    key: 'userInfo',
                    data: Object.assign({ openid }, result.data),
                });
                this.setData({
                    userInfo,
                    pageLoaded: true,
                });
            }
        });
    },
    topInfo() {
        wx.navigateTo({
            url: '../bar/index'
        });
    },
    onReady: function () {
    },
    onShow: function () {
        const _this = this;
        wx.getStorage({
            key: 'user',
            success: function (res) {
                _this.setData({
                    userInfo: res.data,
                });
                _this.getUserInfo();
                _this.getPsyList();
            },
        });
        _this.getPsyList();
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
        this.setData({
            pullDown: true,
            pullUp: false
        });
        wx.stopPullDownRefresh();
    },
    onReachBottom: function () {
        this.setData({
            pullDown: false,
            pullUp: true
        });
    },
    onShareAppMessage: function (options) {
        console.log('onShareAppMessage options', options);
        return {};
    }
});
//# sourceMappingURL=data:application/json;base64,